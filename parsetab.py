
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABREFP ABREL ABREP ADD AND BOOL CONDAND CONDOR DIFERENTE DIVIDE ELSE FECHAFP FECHAL FECHAP FUNABRE FUNFECHA IF IGUAL IN MAIOR MAIORIGUAL MENOR MENORIGUAL MINUS MOD NEXT NOT NUMBER OR PV REST RETURN TIMES VIR WORDCodigo : Codigo Python\n              | Codigo CodigoFun\n              | Python\n              | CodigoFunCodigoFun : ABREFP Fpython FECHAFP\n    Python : REST\n    \n    Fpython : Fpython Funcao\n            | Funcao\n    Funcao : FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHAFuncao : FUNABRE WORD ABREP FECHAP Corpofun FUNFECHAArgs : VarArgs : Opern NUMBER\n    Args : Args VIR Var\n         | Args VIR Opern NUMBER\n    Conjunto : Conjunto VIR ResultConjunto : ResultCorpofun : RETURN Result PVCorpofun : IF ABREP Cond FECHAP Corpofun ELSE CorpofunCond : CondSimpleCond : Cond CONDAND CondSimpleCond : Cond CONDOR CondSimpleCondSimple : ABREP Cond FECHAPCond : NOT CondSimple\n    CondSimple : Varoper Conds Varoper\n               | Varoper\n    \n    Conds : MENOR\n          | MAIOR\n          | IGUAL\n          | DIFERENTE\n          | MAIORIGUAL\n          | MENORIGUAL\n          | IN\n    \n    Result : Varoper\n           | Opern Sinais\n           | Result Oper Varoper\n           | ABREP Result FECHAP\n           | Result Oper ABREP Result FECHAP\n    \n    Opern : ADD\n          | MINUS\n    \n    Oper : Opern\n         | TIMES\n         | DIVIDE\n         | MOD\n         | OR\n         | AND\n         | Conds\n    \n    Varoper : Chamadafun\n            | Var\n    Var : NUMBERVar : BOOLVar : ListVar : WORDList : ABREL FECHALList : ABREL Conjunto FECHALList : ABREL Result NEXT Conjunto2 FECHALConjunto2 : ResultConjunto2 : Conjunto2 NEXT ResultChamadafun : WORD ABREP FECHAPChamadafun : WORD ABREP Conjunto FECHAP\n    Sinais : Chamadafun\n           | WORD\n           | NUMBER\n    '
    
_lr_action_items = {'REST':([0,1,2,3,4,6,7,11,],[4,4,-3,-4,-6,-1,-2,-5,]),'ABREFP':([0,1,2,3,4,6,7,11,],[5,5,-3,-4,-6,-1,-2,-5,]),'$end':([1,2,3,4,6,7,11,],[0,-3,-4,-6,-1,-2,-5,]),'FUNABRE':([5,8,9,12,44,71,],[10,10,-8,-7,-10,-9,]),'FECHAFP':([8,9,12,44,71,],[11,-8,-7,-10,-9,]),'WORD':([10,14,23,24,25,27,29,36,37,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,74,77,83,90,91,93,94,],[13,15,-38,-39,40,15,40,67,40,40,40,40,40,-40,-41,-42,-43,-44,-45,-46,-26,-27,-28,-29,-30,-31,-32,40,40,40,40,40,40,40,40,]),'ABREP':([13,23,24,25,29,30,37,40,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,70,74,77,83,90,91,94,],[14,-38,-39,37,37,46,37,70,74,37,37,83,-40,-41,-42,-43,-44,-45,-46,-26,-27,-28,-29,-30,-31,-32,70,37,74,74,37,74,74,37,]),'FECHAP':([14,15,16,18,20,21,22,31,32,35,38,39,40,42,47,65,66,67,68,69,70,72,75,76,78,79,82,84,85,86,87,88,92,95,96,97,98,100,101,102,104,],[17,-52,26,-11,-49,-50,-51,-12,-53,-33,-47,-48,-52,-13,-54,-34,-60,-61,-62,84,85,-14,89,-19,-25,-15,-35,-36,-58,97,-16,98,-23,-55,104,-59,-22,-20,-21,-24,-37,]),'NUMBER':([14,19,23,24,25,27,29,36,37,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,74,77,83,90,91,93,94,],[20,31,-38,-39,20,20,20,68,20,72,20,20,20,20,-40,-41,-42,-43,-44,-45,-46,-26,-27,-28,-29,-30,-31,-32,20,20,20,20,20,20,20,20,]),'BOOL':([14,23,24,25,27,29,37,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,74,77,83,90,91,93,94,],[21,-38,-39,21,21,21,21,21,21,21,21,-40,-41,-42,-43,-44,-45,-46,-26,-27,-28,-29,-30,-31,-32,21,21,21,21,21,21,21,21,]),'ADD':([14,20,21,22,25,27,29,32,34,35,37,38,39,40,45,47,48,49,65,66,67,68,69,70,79,80,82,83,84,85,87,94,95,96,97,103,104,],[23,-49,-50,-51,23,23,23,-53,23,-33,23,-47,-48,-52,23,-54,23,23,-34,-60,-61,-62,23,23,23,23,-35,23,-36,-58,23,23,-55,23,-59,23,-37,]),'MINUS':([14,20,21,22,25,27,29,32,34,35,37,38,39,40,45,47,48,49,65,66,67,68,69,70,79,80,82,83,84,85,87,94,95,96,97,103,104,],[24,-49,-50,-51,24,24,24,-53,24,-33,24,-47,-48,-52,24,-54,24,24,-34,-60,-61,-62,24,24,24,24,-35,24,-36,-58,24,24,-55,24,-59,24,-37,]),'ABREL':([14,23,24,25,27,29,37,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,74,77,83,90,91,93,94,],[25,-38,-39,25,25,25,25,25,25,25,25,-40,-41,-42,-43,-44,-45,-46,-26,-27,-28,-29,-30,-31,-32,25,25,25,25,25,25,25,25,]),'VIR':([15,16,18,20,21,22,31,32,33,34,35,38,39,40,42,47,65,66,67,68,72,79,82,84,85,86,87,95,97,104,],[-52,27,-11,-49,-50,-51,-12,-53,48,-16,-33,-47,-48,-52,-13,-54,-34,-60,-61,-62,-14,-15,-35,-36,-58,48,-16,-55,-59,-37,]),'RETURN':([17,26,89,105,],[29,29,29,29,]),'IF':([17,26,89,105,],[30,30,30,30,]),'NEXT':([20,21,22,32,34,35,38,39,40,47,65,66,67,68,80,81,82,84,85,95,97,103,104,],[-49,-50,-51,-53,49,-33,-47,-48,-52,-54,-34,-60,-61,-62,-56,94,-35,-36,-58,-55,-59,-57,-37,]),'TIMES':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,52,-33,-47,-48,-52,52,-54,-34,-60,-61,-62,52,52,52,-35,-36,-58,52,-55,52,-59,52,-37,]),'DIVIDE':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,53,-33,-47,-48,-52,53,-54,-34,-60,-61,-62,53,53,53,-35,-36,-58,53,-55,53,-59,53,-37,]),'MOD':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,54,-33,-47,-48,-52,54,-54,-34,-60,-61,-62,54,54,54,-35,-36,-58,54,-55,54,-59,54,-37,]),'OR':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,55,-33,-47,-48,-52,55,-54,-34,-60,-61,-62,55,55,55,-35,-36,-58,55,-55,55,-59,55,-37,]),'AND':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,56,-33,-47,-48,-52,56,-54,-34,-60,-61,-62,56,56,56,-35,-36,-58,56,-55,56,-59,56,-37,]),'MENOR':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,78,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,58,-33,-47,-48,-52,58,-54,-34,-60,-61,-62,58,58,58,58,-35,-36,-58,58,-55,58,-59,58,-37,]),'MAIOR':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,78,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,59,-33,-47,-48,-52,59,-54,-34,-60,-61,-62,59,59,59,59,-35,-36,-58,59,-55,59,-59,59,-37,]),'IGUAL':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,78,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,60,-33,-47,-48,-52,60,-54,-34,-60,-61,-62,60,60,60,60,-35,-36,-58,60,-55,60,-59,60,-37,]),'DIFERENTE':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,78,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,61,-33,-47,-48,-52,61,-54,-34,-60,-61,-62,61,61,61,61,-35,-36,-58,61,-55,61,-59,61,-37,]),'MAIORIGUAL':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,78,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,62,-33,-47,-48,-52,62,-54,-34,-60,-61,-62,62,62,62,62,-35,-36,-58,62,-55,62,-59,62,-37,]),'MENORIGUAL':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,78,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,63,-33,-47,-48,-52,63,-54,-34,-60,-61,-62,63,63,63,63,-35,-36,-58,63,-55,63,-59,63,-37,]),'IN':([20,21,22,32,34,35,38,39,40,45,47,65,66,67,68,69,78,79,80,82,84,85,87,95,96,97,103,104,],[-49,-50,-51,-53,64,-33,-47,-48,-52,64,-54,-34,-60,-61,-62,64,64,64,64,-35,-36,-58,64,-55,64,-59,64,-37,]),'FECHAL':([20,21,22,25,32,33,34,35,38,39,40,47,65,66,67,68,79,80,81,82,84,85,95,97,103,104,],[-49,-50,-51,32,-53,47,-16,-33,-47,-48,-52,-54,-34,-60,-61,-62,-15,-56,95,-35,-36,-58,-55,-59,-57,-37,]),'PV':([20,21,22,32,35,38,39,40,45,47,65,66,67,68,82,84,85,95,97,104,],[-49,-50,-51,-53,-33,-47,-48,-52,73,-54,-34,-60,-61,-62,-35,-36,-58,-55,-59,-37,]),'CONDAND':([20,21,22,32,38,39,40,47,75,76,78,85,88,92,95,97,98,100,101,102,],[-49,-50,-51,-53,-47,-48,-52,-54,90,-19,-25,-58,90,-23,-55,-59,-22,-20,-21,-24,]),'CONDOR':([20,21,22,32,38,39,40,47,75,76,78,85,88,92,95,97,98,100,101,102,],[-49,-50,-51,-53,-47,-48,-52,-54,91,-19,-25,-58,91,-23,-55,-59,-22,-20,-21,-24,]),'FUNFECHA':([28,41,73,106,],[44,71,-17,-18,]),'NOT':([46,74,],[77,77,]),'ELSE':([73,99,106,],[-17,105,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Codigo':([0,],[1,]),'Python':([0,1,],[2,6,]),'CodigoFun':([0,1,],[3,7,]),'Fpython':([5,],[8,]),'Funcao':([5,8,],[9,12,]),'Args':([14,],[16,]),'Var':([14,25,27,29,37,46,48,49,50,70,74,77,83,90,91,93,94,],[18,39,42,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'Opern':([14,25,27,29,34,37,45,48,49,69,70,79,80,83,87,94,96,103,],[19,36,43,36,51,36,51,36,36,51,36,51,51,36,51,36,51,51,]),'List':([14,25,27,29,37,46,48,49,50,70,74,77,83,90,91,93,94,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'Corpofun':([17,26,89,105,],[28,41,99,106,]),'Conjunto':([25,70,],[33,86,]),'Result':([25,29,37,48,49,70,83,94,],[34,45,69,79,80,87,96,103,]),'Varoper':([25,29,37,46,48,49,50,70,74,77,83,90,91,93,94,],[35,35,35,78,35,35,82,35,78,78,35,78,78,102,35,]),'Chamadafun':([25,29,36,37,46,48,49,50,70,74,77,83,90,91,93,94,],[38,38,66,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'Oper':([34,45,69,79,80,87,96,103,],[50,50,50,50,50,50,50,50,]),'Conds':([34,45,69,78,79,80,87,96,103,],[57,57,57,93,57,57,57,57,57,]),'Sinais':([36,],[65,]),'Cond':([46,74,],[75,88,]),'CondSimple':([46,74,77,90,91,],[76,76,92,100,101,]),'Conjunto2':([49,],[81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Codigo","S'",1,None,None,None),
  ('Codigo -> Codigo Python','Codigo',2,'p_Codigo','fpyacc.py',16),
  ('Codigo -> Codigo CodigoFun','Codigo',2,'p_Codigo','fpyacc.py',17),
  ('Codigo -> Python','Codigo',1,'p_Codigo','fpyacc.py',18),
  ('Codigo -> CodigoFun','Codigo',1,'p_Codigo','fpyacc.py',19),
  ('CodigoFun -> ABREFP Fpython FECHAFP','CodigoFun',3,'p_CodigoFun','fpyacc.py',23),
  ('Python -> REST','Python',1,'p_Python','fpyacc.py',28),
  ('Fpython -> Fpython Funcao','Fpython',2,'p_Fpython','fpyacc.py',57),
  ('Fpython -> Funcao','Fpython',1,'p_Fpython','fpyacc.py',58),
  ('Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA','Funcao',7,'p_Funcao_Args','fpyacc.py',80),
  ('Funcao -> FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA','Funcao',6,'p_Funcao','fpyacc.py',87),
  ('Args -> Var','Args',1,'p_Args_Var','fpyacc.py',94),
  ('Args -> Opern NUMBER','Args',2,'p_Args_Opern','fpyacc.py',99),
  ('Args -> Args VIR Var','Args',3,'p_Args','fpyacc.py',105),
  ('Args -> Args VIR Opern NUMBER','Args',4,'p_Args','fpyacc.py',106),
  ('Conjunto -> Conjunto VIR Result','Conjunto',3,'p_Conjunto','fpyacc.py',122),
  ('Conjunto -> Result','Conjunto',1,'p_Conjunto_Result','fpyacc.py',131),
  ('Corpofun -> RETURN Result PV','Corpofun',3,'p_Corpofun_RETURN','fpyacc.py',137),
  ('Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE Corpofun','Corpofun',7,'p_Corpofun_IF','fpyacc.py',144),
  ('Cond -> CondSimple','Cond',1,'p_Cond_CondSimple','fpyacc.py',150),
  ('Cond -> Cond CONDAND CondSimple','Cond',3,'p_Cond_CONDAND','fpyacc.py',155),
  ('Cond -> Cond CONDOR CondSimple','Cond',3,'p_Cond_CONDOR','fpyacc.py',160),
  ('CondSimple -> ABREP Cond FECHAP','CondSimple',3,'p_CondSimple_ABREP','fpyacc.py',165),
  ('Cond -> NOT CondSimple','Cond',2,'p_Cond_NOT','fpyacc.py',172),
  ('CondSimple -> Varoper Conds Varoper','CondSimple',3,'p_CondSimple','fpyacc.py',179),
  ('CondSimple -> Varoper','CondSimple',1,'p_CondSimple','fpyacc.py',180),
  ('Conds -> MENOR','Conds',1,'p_Conds','fpyacc.py',191),
  ('Conds -> MAIOR','Conds',1,'p_Conds','fpyacc.py',192),
  ('Conds -> IGUAL','Conds',1,'p_Conds','fpyacc.py',193),
  ('Conds -> DIFERENTE','Conds',1,'p_Conds','fpyacc.py',194),
  ('Conds -> MAIORIGUAL','Conds',1,'p_Conds','fpyacc.py',195),
  ('Conds -> MENORIGUAL','Conds',1,'p_Conds','fpyacc.py',196),
  ('Conds -> IN','Conds',1,'p_Conds','fpyacc.py',197),
  ('Result -> Varoper','Result',1,'p_Result','fpyacc.py',206),
  ('Result -> Opern Sinais','Result',2,'p_Result','fpyacc.py',207),
  ('Result -> Result Oper Varoper','Result',3,'p_Result','fpyacc.py',208),
  ('Result -> ABREP Result FECHAP','Result',3,'p_Result','fpyacc.py',209),
  ('Result -> Result Oper ABREP Result FECHAP','Result',5,'p_Result','fpyacc.py',210),
  ('Opern -> ADD','Opern',1,'p_Opern','fpyacc.py',234),
  ('Opern -> MINUS','Opern',1,'p_Opern','fpyacc.py',235),
  ('Oper -> Opern','Oper',1,'p_Oper','fpyacc.py',243),
  ('Oper -> TIMES','Oper',1,'p_Oper','fpyacc.py',244),
  ('Oper -> DIVIDE','Oper',1,'p_Oper','fpyacc.py',245),
  ('Oper -> MOD','Oper',1,'p_Oper','fpyacc.py',246),
  ('Oper -> OR','Oper',1,'p_Oper','fpyacc.py',247),
  ('Oper -> AND','Oper',1,'p_Oper','fpyacc.py',248),
  ('Oper -> Conds','Oper',1,'p_Oper','fpyacc.py',249),
  ('Varoper -> Chamadafun','Varoper',1,'p_Varoper','fpyacc.py',258),
  ('Varoper -> Var','Varoper',1,'p_Varoper','fpyacc.py',259),
  ('Var -> NUMBER','Var',1,'p_Var_NUMBER','fpyacc.py',270),
  ('Var -> BOOL','Var',1,'p_Var_BOOL','fpyacc.py',276),
  ('Var -> List','Var',1,'p_Var_List','fpyacc.py',282),
  ('Var -> WORD','Var',1,'p_VAR_WORD','fpyacc.py',288),
  ('List -> ABREL FECHAL','List',2,'p_List_Vazia','fpyacc.py',294),
  ('List -> ABREL Conjunto FECHAL','List',3,'p_List_Estatica','fpyacc.py',302),
  ('List -> ABREL Result NEXT Conjunto2 FECHAL','List',5,'p_List','fpyacc.py',310),
  ('Conjunto2 -> Result','Conjunto2',1,'p_Conjunto2_Word','fpyacc.py',318),
  ('Conjunto2 -> Conjunto2 NEXT Result','Conjunto2',3,'p_Conjunto2','fpyacc.py',323),
  ('Chamadafun -> WORD ABREP FECHAP','Chamadafun',3,'p_Chamadafun_NoArgs','fpyacc.py',328),
  ('Chamadafun -> WORD ABREP Conjunto FECHAP','Chamadafun',4,'p_Chamadafun','fpyacc.py',333),
  ('Sinais -> Chamadafun','Sinais',1,'p_Sinais','fpyacc.py',347),
  ('Sinais -> WORD','Sinais',1,'p_Sinais','fpyacc.py',348),
  ('Sinais -> NUMBER','Sinais',1,'p_Sinais','fpyacc.py',349),
]
