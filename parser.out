Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Codigo
Rule 1     Codigo -> Codigo Python
Rule 2     Codigo -> Codigo CodigoFun
Rule 3     Codigo -> Python
Rule 4     Codigo -> CodigoFun
Rule 5     CodigoFun -> ABREFP Fpython FECHAFP
Rule 6     Python -> REST
Rule 7     Fpython -> Fpython Funcao
Rule 8     Fpython -> Funcao
Rule 9     Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA
Rule 10    Funcao -> FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA
Rule 11    Args -> VarArgs
Rule 12    Args -> Args VIR VarArgs
Rule 13    Conjunto -> Conjunto VIR Result
Rule 14    Conjunto -> Result
Rule 15    Corpofun -> RETURN Result PV
Rule 16    Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE Corpofun
Rule 17    Cond -> CondSimple
Rule 18    Cond -> Cond CONDAND CondSimple
Rule 19    Cond -> Cond CONDOR CondSimple
Rule 20    Cond -> NOT CondSimple
Rule 21    CondSimple -> ABREP Cond FECHAP
Rule 22    CondSimple -> ABREP Cond FECHAP Conds Varoper
Rule 23    CondSimple -> Varoper Conds ABREP Cond FECHAP
Rule 24    CondSimple -> ABREP Cond FECHAP Conds ABREP Cond FECHAP
Rule 25    CondSimple -> Varoper Conds Varoper
Rule 26    CondSimple -> Varoper
Rule 27    Conds -> MENOR
Rule 28    Conds -> MAIOR
Rule 29    Conds -> IGUAL
Rule 30    Conds -> DIFERENTE
Rule 31    Conds -> MAIORIGUAL
Rule 32    Conds -> MENORIGUAL
Rule 33    Conds -> IN
Rule 34    Result -> Opern Varoper
Rule 35    Result -> Opern ABREP Result FECHAP
Rule 36    Result -> Varoper
Rule 37    Result -> Result Oper Varoper
Rule 38    Result -> ABREP Result FECHAP
Rule 39    Result -> Result Oper ABREP Result FECHAP
Rule 40    Opern -> ADD
Rule 41    Opern -> MINUS
Rule 42    Oper -> Opern
Rule 43    Oper -> TIMES
Rule 44    Oper -> DIVIDE
Rule 45    Oper -> MOD
Rule 46    Oper -> OR
Rule 47    Oper -> AND
Rule 48    Oper -> Conds
Rule 49    Varoper -> Chamadafun
Rule 50    Varoper -> Var
Rule 51    Var -> NUMBER
Rule 52    Var -> BOOL
Rule 53    Var -> List
Rule 54    Var -> WORD
Rule 55    List -> ABREL FECHAL
Rule 56    List -> ABREL Conjunto FECHAL
Rule 57    List -> ABREL Result NEXT Conjunto2 FECHAL
Rule 58    Conjunto2 -> Result
Rule 59    Conjunto2 -> Conjunto2 NEXT Result
Rule 60    Chamadafun -> WORD ABREP FECHAP
Rule 61    Chamadafun -> WORD ABREP Conjunto FECHAP
Rule 62    VarArgs -> BOOL
Rule 63    VarArgs -> NUMBER
Rule 64    VarArgs -> Opern NUMBER
Rule 65    VarArgs -> ListArg
Rule 66    VarArgs -> WORD
Rule 67    ListArg -> ABREL FECHAL
Rule 68    ListArg -> ABREL ConjuntoListaArgs FECHAL
Rule 69    ListArg -> ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL
Rule 70    ConjuntoListaArgs -> VarArgs
Rule 71    ConjuntoListaArgs -> ConjuntoListaArgs VIR VarArgs
Rule 72    Conjunto2ListaArgs -> VarArgs
Rule 73    Conjunto2ListaArgs -> Conjunto2ListaArgs NEXT VarArgs

Terminals, with rules where they appear

ABREFP               : 5
ABREL                : 55 56 57 67 68 69
ABREP                : 9 10 16 21 22 23 24 24 35 38 39 60 61
ADD                  : 40
AND                  : 47
BOOL                 : 52 62
CONDAND              : 18
CONDOR               : 19
DIFERENTE            : 30
DIVIDE               : 44
ELSE                 : 16
FECHAFP              : 5
FECHAL               : 55 56 57 67 68 69
FECHAP               : 9 10 16 21 22 23 24 24 35 38 39 60 61
FUNABRE              : 9 10
FUNFECHA             : 9 10
IF                   : 16
IGUAL                : 29
IN                   : 33
MAIOR                : 28
MAIORIGUAL           : 31
MENOR                : 27
MENORIGUAL           : 32
MINUS                : 41
MOD                  : 45
NEXT                 : 57 59 69 73
NOT                  : 20
NUMBER               : 51 63 64
OR                   : 46
PV                   : 15
REST                 : 6
RETURN               : 15
TIMES                : 43
VIR                  : 12 13 71
WORD                 : 9 10 54 60 61 66
error                : 

Nonterminals, with rules where they appear

Args                 : 9 12
Chamadafun           : 49
Codigo               : 1 2 0
CodigoFun            : 2 4
Cond                 : 16 18 19 21 22 23 24 24
CondSimple           : 17 18 19 20
Conds                : 22 23 24 25 48
Conjunto             : 13 56 61
Conjunto2            : 57 59
Conjunto2ListaArgs   : 69 73
ConjuntoListaArgs    : 68 71
Corpofun             : 9 10 16 16
Fpython              : 5 7
Funcao               : 7 8
List                 : 53
ListArg              : 65
Oper                 : 37 39
Opern                : 34 35 42 64
Python               : 1 3
Result               : 13 14 15 35 37 38 39 39 57 58 59
Var                  : 50
VarArgs              : 11 12 69 70 71 72 73
Varoper              : 22 23 25 25 26 34 36 37

Parsing method: LALR

state 0

    (0) S' -> . Codigo
    (1) Codigo -> . Codigo Python
    (2) Codigo -> . Codigo CodigoFun
    (3) Codigo -> . Python
    (4) Codigo -> . CodigoFun
    (6) Python -> . REST
    (5) CodigoFun -> . ABREFP Fpython FECHAFP

    REST            shift and go to state 4
    ABREFP          shift and go to state 5

    Codigo                         shift and go to state 1
    Python                         shift and go to state 2
    CodigoFun                      shift and go to state 3

state 1

    (0) S' -> Codigo .
    (1) Codigo -> Codigo . Python
    (2) Codigo -> Codigo . CodigoFun
    (6) Python -> . REST
    (5) CodigoFun -> . ABREFP Fpython FECHAFP

    REST            shift and go to state 4
    ABREFP          shift and go to state 5

    Python                         shift and go to state 6
    CodigoFun                      shift and go to state 7

state 2

    (3) Codigo -> Python .

    REST            reduce using rule 3 (Codigo -> Python .)
    ABREFP          reduce using rule 3 (Codigo -> Python .)
    $end            reduce using rule 3 (Codigo -> Python .)


state 3

    (4) Codigo -> CodigoFun .

    REST            reduce using rule 4 (Codigo -> CodigoFun .)
    ABREFP          reduce using rule 4 (Codigo -> CodigoFun .)
    $end            reduce using rule 4 (Codigo -> CodigoFun .)


state 4

    (6) Python -> REST .

    REST            reduce using rule 6 (Python -> REST .)
    ABREFP          reduce using rule 6 (Python -> REST .)
    $end            reduce using rule 6 (Python -> REST .)


state 5

    (5) CodigoFun -> ABREFP . Fpython FECHAFP
    (7) Fpython -> . Fpython Funcao
    (8) Fpython -> . Funcao
    (9) Funcao -> . FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA
    (10) Funcao -> . FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA

    FUNABRE         shift and go to state 10

    Fpython                        shift and go to state 8
    Funcao                         shift and go to state 9

state 6

    (1) Codigo -> Codigo Python .

    REST            reduce using rule 1 (Codigo -> Codigo Python .)
    ABREFP          reduce using rule 1 (Codigo -> Codigo Python .)
    $end            reduce using rule 1 (Codigo -> Codigo Python .)


state 7

    (2) Codigo -> Codigo CodigoFun .

    REST            reduce using rule 2 (Codigo -> Codigo CodigoFun .)
    ABREFP          reduce using rule 2 (Codigo -> Codigo CodigoFun .)
    $end            reduce using rule 2 (Codigo -> Codigo CodigoFun .)


state 8

    (5) CodigoFun -> ABREFP Fpython . FECHAFP
    (7) Fpython -> Fpython . Funcao
    (9) Funcao -> . FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA
    (10) Funcao -> . FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA

    FECHAFP         shift and go to state 11
    FUNABRE         shift and go to state 10

    Funcao                         shift and go to state 12

state 9

    (8) Fpython -> Funcao .

    FECHAFP         reduce using rule 8 (Fpython -> Funcao .)
    FUNABRE         reduce using rule 8 (Fpython -> Funcao .)


state 10

    (9) Funcao -> FUNABRE . WORD ABREP Args FECHAP Corpofun FUNFECHA
    (10) Funcao -> FUNABRE . WORD ABREP FECHAP Corpofun FUNFECHA

    WORD            shift and go to state 13


state 11

    (5) CodigoFun -> ABREFP Fpython FECHAFP .

    REST            reduce using rule 5 (CodigoFun -> ABREFP Fpython FECHAFP .)
    ABREFP          reduce using rule 5 (CodigoFun -> ABREFP Fpython FECHAFP .)
    $end            reduce using rule 5 (CodigoFun -> ABREFP Fpython FECHAFP .)


state 12

    (7) Fpython -> Fpython Funcao .

    FECHAFP         reduce using rule 7 (Fpython -> Fpython Funcao .)
    FUNABRE         reduce using rule 7 (Fpython -> Fpython Funcao .)


state 13

    (9) Funcao -> FUNABRE WORD . ABREP Args FECHAP Corpofun FUNFECHA
    (10) Funcao -> FUNABRE WORD . ABREP FECHAP Corpofun FUNFECHA

    ABREP           shift and go to state 14


state 14

    (9) Funcao -> FUNABRE WORD ABREP . Args FECHAP Corpofun FUNFECHA
    (10) Funcao -> FUNABRE WORD ABREP . FECHAP Corpofun FUNFECHA
    (11) Args -> . VarArgs
    (12) Args -> . Args VIR VarArgs
    (62) VarArgs -> . BOOL
    (63) VarArgs -> . NUMBER
    (64) VarArgs -> . Opern NUMBER
    (65) VarArgs -> . ListArg
    (66) VarArgs -> . WORD
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (67) ListArg -> . ABREL FECHAL
    (68) ListArg -> . ABREL ConjuntoListaArgs FECHAL
    (69) ListArg -> . ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL

    FECHAP          shift and go to state 17
    BOOL            shift and go to state 19
    NUMBER          shift and go to state 20
    WORD            shift and go to state 15
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    ABREL           shift and go to state 25

    Args                           shift and go to state 16
    VarArgs                        shift and go to state 18
    Opern                          shift and go to state 21
    ListArg                        shift and go to state 22

state 15

    (66) VarArgs -> WORD .

    FECHAP          reduce using rule 66 (VarArgs -> WORD .)
    VIR             reduce using rule 66 (VarArgs -> WORD .)
    NEXT            reduce using rule 66 (VarArgs -> WORD .)
    FECHAL          reduce using rule 66 (VarArgs -> WORD .)


state 16

    (9) Funcao -> FUNABRE WORD ABREP Args . FECHAP Corpofun FUNFECHA
    (12) Args -> Args . VIR VarArgs

    FECHAP          shift and go to state 26
    VIR             shift and go to state 27


state 17

    (10) Funcao -> FUNABRE WORD ABREP FECHAP . Corpofun FUNFECHA
    (15) Corpofun -> . RETURN Result PV
    (16) Corpofun -> . IF ABREP Cond FECHAP Corpofun ELSE Corpofun

    RETURN          shift and go to state 29
    IF              shift and go to state 30

    Corpofun                       shift and go to state 28

state 18

    (11) Args -> VarArgs .

    FECHAP          reduce using rule 11 (Args -> VarArgs .)
    VIR             reduce using rule 11 (Args -> VarArgs .)


state 19

    (62) VarArgs -> BOOL .

    FECHAP          reduce using rule 62 (VarArgs -> BOOL .)
    VIR             reduce using rule 62 (VarArgs -> BOOL .)
    NEXT            reduce using rule 62 (VarArgs -> BOOL .)
    FECHAL          reduce using rule 62 (VarArgs -> BOOL .)


state 20

    (63) VarArgs -> NUMBER .

    FECHAP          reduce using rule 63 (VarArgs -> NUMBER .)
    VIR             reduce using rule 63 (VarArgs -> NUMBER .)
    NEXT            reduce using rule 63 (VarArgs -> NUMBER .)
    FECHAL          reduce using rule 63 (VarArgs -> NUMBER .)


state 21

    (64) VarArgs -> Opern . NUMBER

    NUMBER          shift and go to state 31


state 22

    (65) VarArgs -> ListArg .

    FECHAP          reduce using rule 65 (VarArgs -> ListArg .)
    VIR             reduce using rule 65 (VarArgs -> ListArg .)
    NEXT            reduce using rule 65 (VarArgs -> ListArg .)
    FECHAL          reduce using rule 65 (VarArgs -> ListArg .)


state 23

    (40) Opern -> ADD .

    NUMBER          reduce using rule 40 (Opern -> ADD .)
    ABREP           reduce using rule 40 (Opern -> ADD .)
    WORD            reduce using rule 40 (Opern -> ADD .)
    BOOL            reduce using rule 40 (Opern -> ADD .)
    ABREL           reduce using rule 40 (Opern -> ADD .)


state 24

    (41) Opern -> MINUS .

    NUMBER          reduce using rule 41 (Opern -> MINUS .)
    ABREP           reduce using rule 41 (Opern -> MINUS .)
    WORD            reduce using rule 41 (Opern -> MINUS .)
    BOOL            reduce using rule 41 (Opern -> MINUS .)
    ABREL           reduce using rule 41 (Opern -> MINUS .)


state 25

    (67) ListArg -> ABREL . FECHAL
    (68) ListArg -> ABREL . ConjuntoListaArgs FECHAL
    (69) ListArg -> ABREL . VarArgs NEXT Conjunto2ListaArgs FECHAL
    (70) ConjuntoListaArgs -> . VarArgs
    (71) ConjuntoListaArgs -> . ConjuntoListaArgs VIR VarArgs
    (62) VarArgs -> . BOOL
    (63) VarArgs -> . NUMBER
    (64) VarArgs -> . Opern NUMBER
    (65) VarArgs -> . ListArg
    (66) VarArgs -> . WORD
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (67) ListArg -> . ABREL FECHAL
    (68) ListArg -> . ABREL ConjuntoListaArgs FECHAL
    (69) ListArg -> . ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL

    FECHAL          shift and go to state 32
    BOOL            shift and go to state 19
    NUMBER          shift and go to state 20
    WORD            shift and go to state 15
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    ABREL           shift and go to state 25

    ConjuntoListaArgs              shift and go to state 33
    VarArgs                        shift and go to state 34
    Opern                          shift and go to state 21
    ListArg                        shift and go to state 22

state 26

    (9) Funcao -> FUNABRE WORD ABREP Args FECHAP . Corpofun FUNFECHA
    (15) Corpofun -> . RETURN Result PV
    (16) Corpofun -> . IF ABREP Cond FECHAP Corpofun ELSE Corpofun

    RETURN          shift and go to state 29
    IF              shift and go to state 30

    Corpofun                       shift and go to state 35

state 27

    (12) Args -> Args VIR . VarArgs
    (62) VarArgs -> . BOOL
    (63) VarArgs -> . NUMBER
    (64) VarArgs -> . Opern NUMBER
    (65) VarArgs -> . ListArg
    (66) VarArgs -> . WORD
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (67) ListArg -> . ABREL FECHAL
    (68) ListArg -> . ABREL ConjuntoListaArgs FECHAL
    (69) ListArg -> . ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL

    BOOL            shift and go to state 19
    NUMBER          shift and go to state 20
    WORD            shift and go to state 15
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    ABREL           shift and go to state 25

    VarArgs                        shift and go to state 36
    Opern                          shift and go to state 21
    ListArg                        shift and go to state 22

state 28

    (10) Funcao -> FUNABRE WORD ABREP FECHAP Corpofun . FUNFECHA

    FUNFECHA        shift and go to state 37


state 29

    (15) Corpofun -> RETURN . Result PV
    (34) Result -> . Opern Varoper
    (35) Result -> . Opern ABREP Result FECHAP
    (36) Result -> . Varoper
    (37) Result -> . Result Oper Varoper
    (38) Result -> . ABREP Result FECHAP
    (39) Result -> . Result Oper ABREP Result FECHAP
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 41
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Result                         shift and go to state 38
    Opern                          shift and go to state 39
    Varoper                        shift and go to state 40
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 30

    (16) Corpofun -> IF . ABREP Cond FECHAP Corpofun ELSE Corpofun

    ABREP           shift and go to state 49


state 31

    (64) VarArgs -> Opern NUMBER .

    FECHAP          reduce using rule 64 (VarArgs -> Opern NUMBER .)
    VIR             reduce using rule 64 (VarArgs -> Opern NUMBER .)
    NEXT            reduce using rule 64 (VarArgs -> Opern NUMBER .)
    FECHAL          reduce using rule 64 (VarArgs -> Opern NUMBER .)


state 32

    (67) ListArg -> ABREL FECHAL .

    FECHAP          reduce using rule 67 (ListArg -> ABREL FECHAL .)
    VIR             reduce using rule 67 (ListArg -> ABREL FECHAL .)
    NEXT            reduce using rule 67 (ListArg -> ABREL FECHAL .)
    FECHAL          reduce using rule 67 (ListArg -> ABREL FECHAL .)


state 33

    (68) ListArg -> ABREL ConjuntoListaArgs . FECHAL
    (71) ConjuntoListaArgs -> ConjuntoListaArgs . VIR VarArgs

    FECHAL          shift and go to state 50
    VIR             shift and go to state 51


state 34

    (69) ListArg -> ABREL VarArgs . NEXT Conjunto2ListaArgs FECHAL
    (70) ConjuntoListaArgs -> VarArgs .

    NEXT            shift and go to state 52
    FECHAL          reduce using rule 70 (ConjuntoListaArgs -> VarArgs .)
    VIR             reduce using rule 70 (ConjuntoListaArgs -> VarArgs .)


state 35

    (9) Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun . FUNFECHA

    FUNFECHA        shift and go to state 53


state 36

    (12) Args -> Args VIR VarArgs .

    FECHAP          reduce using rule 12 (Args -> Args VIR VarArgs .)
    VIR             reduce using rule 12 (Args -> Args VIR VarArgs .)


state 37

    (10) Funcao -> FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA .

    FECHAFP         reduce using rule 10 (Funcao -> FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA .)
    FUNABRE         reduce using rule 10 (Funcao -> FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA .)


state 38

    (15) Corpofun -> RETURN Result . PV
    (37) Result -> Result . Oper Varoper
    (39) Result -> Result . Oper ABREP Result FECHAP
    (42) Oper -> . Opern
    (43) Oper -> . TIMES
    (44) Oper -> . DIVIDE
    (45) Oper -> . MOD
    (46) Oper -> . OR
    (47) Oper -> . AND
    (48) Oper -> . Conds
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    PV              shift and go to state 54
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    OR              shift and go to state 60
    AND             shift and go to state 61
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Oper                           shift and go to state 55
    Opern                          shift and go to state 56
    Conds                          shift and go to state 62

state 39

    (34) Result -> Opern . Varoper
    (35) Result -> Opern . ABREP Result FECHAP
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 71
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Varoper                        shift and go to state 70
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 40

    (36) Result -> Varoper .

    PV              reduce using rule 36 (Result -> Varoper .)
    TIMES           reduce using rule 36 (Result -> Varoper .)
    DIVIDE          reduce using rule 36 (Result -> Varoper .)
    MOD             reduce using rule 36 (Result -> Varoper .)
    OR              reduce using rule 36 (Result -> Varoper .)
    AND             reduce using rule 36 (Result -> Varoper .)
    ADD             reduce using rule 36 (Result -> Varoper .)
    MINUS           reduce using rule 36 (Result -> Varoper .)
    MENOR           reduce using rule 36 (Result -> Varoper .)
    MAIOR           reduce using rule 36 (Result -> Varoper .)
    IGUAL           reduce using rule 36 (Result -> Varoper .)
    DIFERENTE       reduce using rule 36 (Result -> Varoper .)
    MAIORIGUAL      reduce using rule 36 (Result -> Varoper .)
    MENORIGUAL      reduce using rule 36 (Result -> Varoper .)
    IN              reduce using rule 36 (Result -> Varoper .)
    FECHAP          reduce using rule 36 (Result -> Varoper .)
    NEXT            reduce using rule 36 (Result -> Varoper .)
    FECHAL          reduce using rule 36 (Result -> Varoper .)
    VIR             reduce using rule 36 (Result -> Varoper .)


state 41

    (38) Result -> ABREP . Result FECHAP
    (34) Result -> . Opern Varoper
    (35) Result -> . Opern ABREP Result FECHAP
    (36) Result -> . Varoper
    (37) Result -> . Result Oper Varoper
    (38) Result -> . ABREP Result FECHAP
    (39) Result -> . Result Oper ABREP Result FECHAP
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 41
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Result                         shift and go to state 72
    Opern                          shift and go to state 39
    Varoper                        shift and go to state 40
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 42

    (49) Varoper -> Chamadafun .

    PV              reduce using rule 49 (Varoper -> Chamadafun .)
    TIMES           reduce using rule 49 (Varoper -> Chamadafun .)
    DIVIDE          reduce using rule 49 (Varoper -> Chamadafun .)
    MOD             reduce using rule 49 (Varoper -> Chamadafun .)
    OR              reduce using rule 49 (Varoper -> Chamadafun .)
    AND             reduce using rule 49 (Varoper -> Chamadafun .)
    ADD             reduce using rule 49 (Varoper -> Chamadafun .)
    MINUS           reduce using rule 49 (Varoper -> Chamadafun .)
    MENOR           reduce using rule 49 (Varoper -> Chamadafun .)
    MAIOR           reduce using rule 49 (Varoper -> Chamadafun .)
    IGUAL           reduce using rule 49 (Varoper -> Chamadafun .)
    DIFERENTE       reduce using rule 49 (Varoper -> Chamadafun .)
    MAIORIGUAL      reduce using rule 49 (Varoper -> Chamadafun .)
    MENORIGUAL      reduce using rule 49 (Varoper -> Chamadafun .)
    IN              reduce using rule 49 (Varoper -> Chamadafun .)
    FECHAP          reduce using rule 49 (Varoper -> Chamadafun .)
    NEXT            reduce using rule 49 (Varoper -> Chamadafun .)
    FECHAL          reduce using rule 49 (Varoper -> Chamadafun .)
    VIR             reduce using rule 49 (Varoper -> Chamadafun .)
    CONDAND         reduce using rule 49 (Varoper -> Chamadafun .)
    CONDOR          reduce using rule 49 (Varoper -> Chamadafun .)


state 43

    (50) Varoper -> Var .

    PV              reduce using rule 50 (Varoper -> Var .)
    TIMES           reduce using rule 50 (Varoper -> Var .)
    DIVIDE          reduce using rule 50 (Varoper -> Var .)
    MOD             reduce using rule 50 (Varoper -> Var .)
    OR              reduce using rule 50 (Varoper -> Var .)
    AND             reduce using rule 50 (Varoper -> Var .)
    ADD             reduce using rule 50 (Varoper -> Var .)
    MINUS           reduce using rule 50 (Varoper -> Var .)
    MENOR           reduce using rule 50 (Varoper -> Var .)
    MAIOR           reduce using rule 50 (Varoper -> Var .)
    IGUAL           reduce using rule 50 (Varoper -> Var .)
    DIFERENTE       reduce using rule 50 (Varoper -> Var .)
    MAIORIGUAL      reduce using rule 50 (Varoper -> Var .)
    MENORIGUAL      reduce using rule 50 (Varoper -> Var .)
    IN              reduce using rule 50 (Varoper -> Var .)
    FECHAP          reduce using rule 50 (Varoper -> Var .)
    NEXT            reduce using rule 50 (Varoper -> Var .)
    FECHAL          reduce using rule 50 (Varoper -> Var .)
    VIR             reduce using rule 50 (Varoper -> Var .)
    CONDAND         reduce using rule 50 (Varoper -> Var .)
    CONDOR          reduce using rule 50 (Varoper -> Var .)


state 44

    (60) Chamadafun -> WORD . ABREP FECHAP
    (61) Chamadafun -> WORD . ABREP Conjunto FECHAP
    (54) Var -> WORD .

    ABREP           shift and go to state 73
    PV              reduce using rule 54 (Var -> WORD .)
    TIMES           reduce using rule 54 (Var -> WORD .)
    DIVIDE          reduce using rule 54 (Var -> WORD .)
    MOD             reduce using rule 54 (Var -> WORD .)
    OR              reduce using rule 54 (Var -> WORD .)
    AND             reduce using rule 54 (Var -> WORD .)
    ADD             reduce using rule 54 (Var -> WORD .)
    MINUS           reduce using rule 54 (Var -> WORD .)
    MENOR           reduce using rule 54 (Var -> WORD .)
    MAIOR           reduce using rule 54 (Var -> WORD .)
    IGUAL           reduce using rule 54 (Var -> WORD .)
    DIFERENTE       reduce using rule 54 (Var -> WORD .)
    MAIORIGUAL      reduce using rule 54 (Var -> WORD .)
    MENORIGUAL      reduce using rule 54 (Var -> WORD .)
    IN              reduce using rule 54 (Var -> WORD .)
    FECHAP          reduce using rule 54 (Var -> WORD .)
    NEXT            reduce using rule 54 (Var -> WORD .)
    FECHAL          reduce using rule 54 (Var -> WORD .)
    VIR             reduce using rule 54 (Var -> WORD .)
    CONDAND         reduce using rule 54 (Var -> WORD .)
    CONDOR          reduce using rule 54 (Var -> WORD .)


state 45

    (51) Var -> NUMBER .

    PV              reduce using rule 51 (Var -> NUMBER .)
    TIMES           reduce using rule 51 (Var -> NUMBER .)
    DIVIDE          reduce using rule 51 (Var -> NUMBER .)
    MOD             reduce using rule 51 (Var -> NUMBER .)
    OR              reduce using rule 51 (Var -> NUMBER .)
    AND             reduce using rule 51 (Var -> NUMBER .)
    ADD             reduce using rule 51 (Var -> NUMBER .)
    MINUS           reduce using rule 51 (Var -> NUMBER .)
    MENOR           reduce using rule 51 (Var -> NUMBER .)
    MAIOR           reduce using rule 51 (Var -> NUMBER .)
    IGUAL           reduce using rule 51 (Var -> NUMBER .)
    DIFERENTE       reduce using rule 51 (Var -> NUMBER .)
    MAIORIGUAL      reduce using rule 51 (Var -> NUMBER .)
    MENORIGUAL      reduce using rule 51 (Var -> NUMBER .)
    IN              reduce using rule 51 (Var -> NUMBER .)
    FECHAP          reduce using rule 51 (Var -> NUMBER .)
    NEXT            reduce using rule 51 (Var -> NUMBER .)
    FECHAL          reduce using rule 51 (Var -> NUMBER .)
    VIR             reduce using rule 51 (Var -> NUMBER .)
    CONDAND         reduce using rule 51 (Var -> NUMBER .)
    CONDOR          reduce using rule 51 (Var -> NUMBER .)


state 46

    (52) Var -> BOOL .

    PV              reduce using rule 52 (Var -> BOOL .)
    TIMES           reduce using rule 52 (Var -> BOOL .)
    DIVIDE          reduce using rule 52 (Var -> BOOL .)
    MOD             reduce using rule 52 (Var -> BOOL .)
    OR              reduce using rule 52 (Var -> BOOL .)
    AND             reduce using rule 52 (Var -> BOOL .)
    ADD             reduce using rule 52 (Var -> BOOL .)
    MINUS           reduce using rule 52 (Var -> BOOL .)
    MENOR           reduce using rule 52 (Var -> BOOL .)
    MAIOR           reduce using rule 52 (Var -> BOOL .)
    IGUAL           reduce using rule 52 (Var -> BOOL .)
    DIFERENTE       reduce using rule 52 (Var -> BOOL .)
    MAIORIGUAL      reduce using rule 52 (Var -> BOOL .)
    MENORIGUAL      reduce using rule 52 (Var -> BOOL .)
    IN              reduce using rule 52 (Var -> BOOL .)
    FECHAP          reduce using rule 52 (Var -> BOOL .)
    NEXT            reduce using rule 52 (Var -> BOOL .)
    FECHAL          reduce using rule 52 (Var -> BOOL .)
    VIR             reduce using rule 52 (Var -> BOOL .)
    CONDAND         reduce using rule 52 (Var -> BOOL .)
    CONDOR          reduce using rule 52 (Var -> BOOL .)


state 47

    (53) Var -> List .

    PV              reduce using rule 53 (Var -> List .)
    TIMES           reduce using rule 53 (Var -> List .)
    DIVIDE          reduce using rule 53 (Var -> List .)
    MOD             reduce using rule 53 (Var -> List .)
    OR              reduce using rule 53 (Var -> List .)
    AND             reduce using rule 53 (Var -> List .)
    ADD             reduce using rule 53 (Var -> List .)
    MINUS           reduce using rule 53 (Var -> List .)
    MENOR           reduce using rule 53 (Var -> List .)
    MAIOR           reduce using rule 53 (Var -> List .)
    IGUAL           reduce using rule 53 (Var -> List .)
    DIFERENTE       reduce using rule 53 (Var -> List .)
    MAIORIGUAL      reduce using rule 53 (Var -> List .)
    MENORIGUAL      reduce using rule 53 (Var -> List .)
    IN              reduce using rule 53 (Var -> List .)
    FECHAP          reduce using rule 53 (Var -> List .)
    NEXT            reduce using rule 53 (Var -> List .)
    FECHAL          reduce using rule 53 (Var -> List .)
    VIR             reduce using rule 53 (Var -> List .)
    CONDAND         reduce using rule 53 (Var -> List .)
    CONDOR          reduce using rule 53 (Var -> List .)


state 48

    (55) List -> ABREL . FECHAL
    (56) List -> ABREL . Conjunto FECHAL
    (57) List -> ABREL . Result NEXT Conjunto2 FECHAL
    (13) Conjunto -> . Conjunto VIR Result
    (14) Conjunto -> . Result
    (34) Result -> . Opern Varoper
    (35) Result -> . Opern ABREP Result FECHAP
    (36) Result -> . Varoper
    (37) Result -> . Result Oper Varoper
    (38) Result -> . ABREP Result FECHAP
    (39) Result -> . Result Oper ABREP Result FECHAP
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    FECHAL          shift and go to state 74
    ABREP           shift and go to state 41
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Conjunto                       shift and go to state 75
    Result                         shift and go to state 76
    Opern                          shift and go to state 39
    Varoper                        shift and go to state 40
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 49

    (16) Corpofun -> IF ABREP . Cond FECHAP Corpofun ELSE Corpofun
    (17) Cond -> . CondSimple
    (18) Cond -> . Cond CONDAND CondSimple
    (19) Cond -> . Cond CONDOR CondSimple
    (20) Cond -> . NOT CondSimple
    (21) CondSimple -> . ABREP Cond FECHAP
    (22) CondSimple -> . ABREP Cond FECHAP Conds Varoper
    (23) CondSimple -> . Varoper Conds ABREP Cond FECHAP
    (24) CondSimple -> . ABREP Cond FECHAP Conds ABREP Cond FECHAP
    (25) CondSimple -> . Varoper Conds Varoper
    (26) CondSimple -> . Varoper
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    NOT             shift and go to state 80
    ABREP           shift and go to state 77
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Cond                           shift and go to state 78
    CondSimple                     shift and go to state 79
    Varoper                        shift and go to state 81
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 50

    (68) ListArg -> ABREL ConjuntoListaArgs FECHAL .

    FECHAP          reduce using rule 68 (ListArg -> ABREL ConjuntoListaArgs FECHAL .)
    VIR             reduce using rule 68 (ListArg -> ABREL ConjuntoListaArgs FECHAL .)
    NEXT            reduce using rule 68 (ListArg -> ABREL ConjuntoListaArgs FECHAL .)
    FECHAL          reduce using rule 68 (ListArg -> ABREL ConjuntoListaArgs FECHAL .)


state 51

    (71) ConjuntoListaArgs -> ConjuntoListaArgs VIR . VarArgs
    (62) VarArgs -> . BOOL
    (63) VarArgs -> . NUMBER
    (64) VarArgs -> . Opern NUMBER
    (65) VarArgs -> . ListArg
    (66) VarArgs -> . WORD
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (67) ListArg -> . ABREL FECHAL
    (68) ListArg -> . ABREL ConjuntoListaArgs FECHAL
    (69) ListArg -> . ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL

    BOOL            shift and go to state 19
    NUMBER          shift and go to state 20
    WORD            shift and go to state 15
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    ABREL           shift and go to state 25

    VarArgs                        shift and go to state 82
    Opern                          shift and go to state 21
    ListArg                        shift and go to state 22

state 52

    (69) ListArg -> ABREL VarArgs NEXT . Conjunto2ListaArgs FECHAL
    (72) Conjunto2ListaArgs -> . VarArgs
    (73) Conjunto2ListaArgs -> . Conjunto2ListaArgs NEXT VarArgs
    (62) VarArgs -> . BOOL
    (63) VarArgs -> . NUMBER
    (64) VarArgs -> . Opern NUMBER
    (65) VarArgs -> . ListArg
    (66) VarArgs -> . WORD
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (67) ListArg -> . ABREL FECHAL
    (68) ListArg -> . ABREL ConjuntoListaArgs FECHAL
    (69) ListArg -> . ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL

    BOOL            shift and go to state 19
    NUMBER          shift and go to state 20
    WORD            shift and go to state 15
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    ABREL           shift and go to state 25

    VarArgs                        shift and go to state 83
    Conjunto2ListaArgs             shift and go to state 84
    Opern                          shift and go to state 21
    ListArg                        shift and go to state 22

state 53

    (9) Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA .

    FECHAFP         reduce using rule 9 (Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA .)
    FUNABRE         reduce using rule 9 (Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA .)


state 54

    (15) Corpofun -> RETURN Result PV .

    FUNFECHA        reduce using rule 15 (Corpofun -> RETURN Result PV .)
    ELSE            reduce using rule 15 (Corpofun -> RETURN Result PV .)


state 55

    (37) Result -> Result Oper . Varoper
    (39) Result -> Result Oper . ABREP Result FECHAP
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 86
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Varoper                        shift and go to state 85
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 56

    (42) Oper -> Opern .

    ABREP           reduce using rule 42 (Oper -> Opern .)
    WORD            reduce using rule 42 (Oper -> Opern .)
    NUMBER          reduce using rule 42 (Oper -> Opern .)
    BOOL            reduce using rule 42 (Oper -> Opern .)
    ABREL           reduce using rule 42 (Oper -> Opern .)


state 57

    (43) Oper -> TIMES .

    ABREP           reduce using rule 43 (Oper -> TIMES .)
    WORD            reduce using rule 43 (Oper -> TIMES .)
    NUMBER          reduce using rule 43 (Oper -> TIMES .)
    BOOL            reduce using rule 43 (Oper -> TIMES .)
    ABREL           reduce using rule 43 (Oper -> TIMES .)


state 58

    (44) Oper -> DIVIDE .

    ABREP           reduce using rule 44 (Oper -> DIVIDE .)
    WORD            reduce using rule 44 (Oper -> DIVIDE .)
    NUMBER          reduce using rule 44 (Oper -> DIVIDE .)
    BOOL            reduce using rule 44 (Oper -> DIVIDE .)
    ABREL           reduce using rule 44 (Oper -> DIVIDE .)


state 59

    (45) Oper -> MOD .

    ABREP           reduce using rule 45 (Oper -> MOD .)
    WORD            reduce using rule 45 (Oper -> MOD .)
    NUMBER          reduce using rule 45 (Oper -> MOD .)
    BOOL            reduce using rule 45 (Oper -> MOD .)
    ABREL           reduce using rule 45 (Oper -> MOD .)


state 60

    (46) Oper -> OR .

    ABREP           reduce using rule 46 (Oper -> OR .)
    WORD            reduce using rule 46 (Oper -> OR .)
    NUMBER          reduce using rule 46 (Oper -> OR .)
    BOOL            reduce using rule 46 (Oper -> OR .)
    ABREL           reduce using rule 46 (Oper -> OR .)


state 61

    (47) Oper -> AND .

    ABREP           reduce using rule 47 (Oper -> AND .)
    WORD            reduce using rule 47 (Oper -> AND .)
    NUMBER          reduce using rule 47 (Oper -> AND .)
    BOOL            reduce using rule 47 (Oper -> AND .)
    ABREL           reduce using rule 47 (Oper -> AND .)


state 62

    (48) Oper -> Conds .

    ABREP           reduce using rule 48 (Oper -> Conds .)
    WORD            reduce using rule 48 (Oper -> Conds .)
    NUMBER          reduce using rule 48 (Oper -> Conds .)
    BOOL            reduce using rule 48 (Oper -> Conds .)
    ABREL           reduce using rule 48 (Oper -> Conds .)


state 63

    (27) Conds -> MENOR .

    ABREP           reduce using rule 27 (Conds -> MENOR .)
    WORD            reduce using rule 27 (Conds -> MENOR .)
    NUMBER          reduce using rule 27 (Conds -> MENOR .)
    BOOL            reduce using rule 27 (Conds -> MENOR .)
    ABREL           reduce using rule 27 (Conds -> MENOR .)


state 64

    (28) Conds -> MAIOR .

    ABREP           reduce using rule 28 (Conds -> MAIOR .)
    WORD            reduce using rule 28 (Conds -> MAIOR .)
    NUMBER          reduce using rule 28 (Conds -> MAIOR .)
    BOOL            reduce using rule 28 (Conds -> MAIOR .)
    ABREL           reduce using rule 28 (Conds -> MAIOR .)


state 65

    (29) Conds -> IGUAL .

    ABREP           reduce using rule 29 (Conds -> IGUAL .)
    WORD            reduce using rule 29 (Conds -> IGUAL .)
    NUMBER          reduce using rule 29 (Conds -> IGUAL .)
    BOOL            reduce using rule 29 (Conds -> IGUAL .)
    ABREL           reduce using rule 29 (Conds -> IGUAL .)


state 66

    (30) Conds -> DIFERENTE .

    ABREP           reduce using rule 30 (Conds -> DIFERENTE .)
    WORD            reduce using rule 30 (Conds -> DIFERENTE .)
    NUMBER          reduce using rule 30 (Conds -> DIFERENTE .)
    BOOL            reduce using rule 30 (Conds -> DIFERENTE .)
    ABREL           reduce using rule 30 (Conds -> DIFERENTE .)


state 67

    (31) Conds -> MAIORIGUAL .

    ABREP           reduce using rule 31 (Conds -> MAIORIGUAL .)
    WORD            reduce using rule 31 (Conds -> MAIORIGUAL .)
    NUMBER          reduce using rule 31 (Conds -> MAIORIGUAL .)
    BOOL            reduce using rule 31 (Conds -> MAIORIGUAL .)
    ABREL           reduce using rule 31 (Conds -> MAIORIGUAL .)


state 68

    (32) Conds -> MENORIGUAL .

    ABREP           reduce using rule 32 (Conds -> MENORIGUAL .)
    WORD            reduce using rule 32 (Conds -> MENORIGUAL .)
    NUMBER          reduce using rule 32 (Conds -> MENORIGUAL .)
    BOOL            reduce using rule 32 (Conds -> MENORIGUAL .)
    ABREL           reduce using rule 32 (Conds -> MENORIGUAL .)


state 69

    (33) Conds -> IN .

    ABREP           reduce using rule 33 (Conds -> IN .)
    WORD            reduce using rule 33 (Conds -> IN .)
    NUMBER          reduce using rule 33 (Conds -> IN .)
    BOOL            reduce using rule 33 (Conds -> IN .)
    ABREL           reduce using rule 33 (Conds -> IN .)


state 70

    (34) Result -> Opern Varoper .

    PV              reduce using rule 34 (Result -> Opern Varoper .)
    TIMES           reduce using rule 34 (Result -> Opern Varoper .)
    DIVIDE          reduce using rule 34 (Result -> Opern Varoper .)
    MOD             reduce using rule 34 (Result -> Opern Varoper .)
    OR              reduce using rule 34 (Result -> Opern Varoper .)
    AND             reduce using rule 34 (Result -> Opern Varoper .)
    ADD             reduce using rule 34 (Result -> Opern Varoper .)
    MINUS           reduce using rule 34 (Result -> Opern Varoper .)
    MENOR           reduce using rule 34 (Result -> Opern Varoper .)
    MAIOR           reduce using rule 34 (Result -> Opern Varoper .)
    IGUAL           reduce using rule 34 (Result -> Opern Varoper .)
    DIFERENTE       reduce using rule 34 (Result -> Opern Varoper .)
    MAIORIGUAL      reduce using rule 34 (Result -> Opern Varoper .)
    MENORIGUAL      reduce using rule 34 (Result -> Opern Varoper .)
    IN              reduce using rule 34 (Result -> Opern Varoper .)
    FECHAP          reduce using rule 34 (Result -> Opern Varoper .)
    NEXT            reduce using rule 34 (Result -> Opern Varoper .)
    FECHAL          reduce using rule 34 (Result -> Opern Varoper .)
    VIR             reduce using rule 34 (Result -> Opern Varoper .)


state 71

    (35) Result -> Opern ABREP . Result FECHAP
    (34) Result -> . Opern Varoper
    (35) Result -> . Opern ABREP Result FECHAP
    (36) Result -> . Varoper
    (37) Result -> . Result Oper Varoper
    (38) Result -> . ABREP Result FECHAP
    (39) Result -> . Result Oper ABREP Result FECHAP
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 41
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Opern                          shift and go to state 39
    Result                         shift and go to state 87
    Varoper                        shift and go to state 40
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 72

    (38) Result -> ABREP Result . FECHAP
    (37) Result -> Result . Oper Varoper
    (39) Result -> Result . Oper ABREP Result FECHAP
    (42) Oper -> . Opern
    (43) Oper -> . TIMES
    (44) Oper -> . DIVIDE
    (45) Oper -> . MOD
    (46) Oper -> . OR
    (47) Oper -> . AND
    (48) Oper -> . Conds
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    FECHAP          shift and go to state 88
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    OR              shift and go to state 60
    AND             shift and go to state 61
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Oper                           shift and go to state 55
    Opern                          shift and go to state 56
    Conds                          shift and go to state 62

state 73

    (60) Chamadafun -> WORD ABREP . FECHAP
    (61) Chamadafun -> WORD ABREP . Conjunto FECHAP
    (13) Conjunto -> . Conjunto VIR Result
    (14) Conjunto -> . Result
    (34) Result -> . Opern Varoper
    (35) Result -> . Opern ABREP Result FECHAP
    (36) Result -> . Varoper
    (37) Result -> . Result Oper Varoper
    (38) Result -> . ABREP Result FECHAP
    (39) Result -> . Result Oper ABREP Result FECHAP
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    FECHAP          shift and go to state 89
    ABREP           shift and go to state 41
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Conjunto                       shift and go to state 90
    Result                         shift and go to state 91
    Opern                          shift and go to state 39
    Varoper                        shift and go to state 40
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 74

    (55) List -> ABREL FECHAL .

    PV              reduce using rule 55 (List -> ABREL FECHAL .)
    TIMES           reduce using rule 55 (List -> ABREL FECHAL .)
    DIVIDE          reduce using rule 55 (List -> ABREL FECHAL .)
    MOD             reduce using rule 55 (List -> ABREL FECHAL .)
    OR              reduce using rule 55 (List -> ABREL FECHAL .)
    AND             reduce using rule 55 (List -> ABREL FECHAL .)
    ADD             reduce using rule 55 (List -> ABREL FECHAL .)
    MINUS           reduce using rule 55 (List -> ABREL FECHAL .)
    MENOR           reduce using rule 55 (List -> ABREL FECHAL .)
    MAIOR           reduce using rule 55 (List -> ABREL FECHAL .)
    IGUAL           reduce using rule 55 (List -> ABREL FECHAL .)
    DIFERENTE       reduce using rule 55 (List -> ABREL FECHAL .)
    MAIORIGUAL      reduce using rule 55 (List -> ABREL FECHAL .)
    MENORIGUAL      reduce using rule 55 (List -> ABREL FECHAL .)
    IN              reduce using rule 55 (List -> ABREL FECHAL .)
    FECHAP          reduce using rule 55 (List -> ABREL FECHAL .)
    NEXT            reduce using rule 55 (List -> ABREL FECHAL .)
    FECHAL          reduce using rule 55 (List -> ABREL FECHAL .)
    VIR             reduce using rule 55 (List -> ABREL FECHAL .)
    CONDAND         reduce using rule 55 (List -> ABREL FECHAL .)
    CONDOR          reduce using rule 55 (List -> ABREL FECHAL .)


state 75

    (56) List -> ABREL Conjunto . FECHAL
    (13) Conjunto -> Conjunto . VIR Result

    FECHAL          shift and go to state 92
    VIR             shift and go to state 93


state 76

    (57) List -> ABREL Result . NEXT Conjunto2 FECHAL
    (14) Conjunto -> Result .
    (37) Result -> Result . Oper Varoper
    (39) Result -> Result . Oper ABREP Result FECHAP
    (42) Oper -> . Opern
    (43) Oper -> . TIMES
    (44) Oper -> . DIVIDE
    (45) Oper -> . MOD
    (46) Oper -> . OR
    (47) Oper -> . AND
    (48) Oper -> . Conds
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    NEXT            shift and go to state 94
    FECHAL          reduce using rule 14 (Conjunto -> Result .)
    VIR             reduce using rule 14 (Conjunto -> Result .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    OR              shift and go to state 60
    AND             shift and go to state 61
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Oper                           shift and go to state 55
    Opern                          shift and go to state 56
    Conds                          shift and go to state 62

state 77

    (21) CondSimple -> ABREP . Cond FECHAP
    (22) CondSimple -> ABREP . Cond FECHAP Conds Varoper
    (24) CondSimple -> ABREP . Cond FECHAP Conds ABREP Cond FECHAP
    (17) Cond -> . CondSimple
    (18) Cond -> . Cond CONDAND CondSimple
    (19) Cond -> . Cond CONDOR CondSimple
    (20) Cond -> . NOT CondSimple
    (21) CondSimple -> . ABREP Cond FECHAP
    (22) CondSimple -> . ABREP Cond FECHAP Conds Varoper
    (23) CondSimple -> . Varoper Conds ABREP Cond FECHAP
    (24) CondSimple -> . ABREP Cond FECHAP Conds ABREP Cond FECHAP
    (25) CondSimple -> . Varoper Conds Varoper
    (26) CondSimple -> . Varoper
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    NOT             shift and go to state 80
    ABREP           shift and go to state 77
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Cond                           shift and go to state 95
    Varoper                        shift and go to state 81
    CondSimple                     shift and go to state 79
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 78

    (16) Corpofun -> IF ABREP Cond . FECHAP Corpofun ELSE Corpofun
    (18) Cond -> Cond . CONDAND CondSimple
    (19) Cond -> Cond . CONDOR CondSimple

    FECHAP          shift and go to state 96
    CONDAND         shift and go to state 97
    CONDOR          shift and go to state 98


state 79

    (17) Cond -> CondSimple .

    FECHAP          reduce using rule 17 (Cond -> CondSimple .)
    CONDAND         reduce using rule 17 (Cond -> CondSimple .)
    CONDOR          reduce using rule 17 (Cond -> CondSimple .)


state 80

    (20) Cond -> NOT . CondSimple
    (21) CondSimple -> . ABREP Cond FECHAP
    (22) CondSimple -> . ABREP Cond FECHAP Conds Varoper
    (23) CondSimple -> . Varoper Conds ABREP Cond FECHAP
    (24) CondSimple -> . ABREP Cond FECHAP Conds ABREP Cond FECHAP
    (25) CondSimple -> . Varoper Conds Varoper
    (26) CondSimple -> . Varoper
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 77
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    CondSimple                     shift and go to state 99
    Varoper                        shift and go to state 81
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 81

    (23) CondSimple -> Varoper . Conds ABREP Cond FECHAP
    (25) CondSimple -> Varoper . Conds Varoper
    (26) CondSimple -> Varoper .
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    FECHAP          reduce using rule 26 (CondSimple -> Varoper .)
    CONDAND         reduce using rule 26 (CondSimple -> Varoper .)
    CONDOR          reduce using rule 26 (CondSimple -> Varoper .)
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Conds                          shift and go to state 100

state 82

    (71) ConjuntoListaArgs -> ConjuntoListaArgs VIR VarArgs .

    FECHAL          reduce using rule 71 (ConjuntoListaArgs -> ConjuntoListaArgs VIR VarArgs .)
    VIR             reduce using rule 71 (ConjuntoListaArgs -> ConjuntoListaArgs VIR VarArgs .)


state 83

    (72) Conjunto2ListaArgs -> VarArgs .

    FECHAL          reduce using rule 72 (Conjunto2ListaArgs -> VarArgs .)
    NEXT            reduce using rule 72 (Conjunto2ListaArgs -> VarArgs .)


state 84

    (69) ListArg -> ABREL VarArgs NEXT Conjunto2ListaArgs . FECHAL
    (73) Conjunto2ListaArgs -> Conjunto2ListaArgs . NEXT VarArgs

    FECHAL          shift and go to state 102
    NEXT            shift and go to state 101


state 85

    (37) Result -> Result Oper Varoper .

    PV              reduce using rule 37 (Result -> Result Oper Varoper .)
    TIMES           reduce using rule 37 (Result -> Result Oper Varoper .)
    DIVIDE          reduce using rule 37 (Result -> Result Oper Varoper .)
    MOD             reduce using rule 37 (Result -> Result Oper Varoper .)
    OR              reduce using rule 37 (Result -> Result Oper Varoper .)
    AND             reduce using rule 37 (Result -> Result Oper Varoper .)
    ADD             reduce using rule 37 (Result -> Result Oper Varoper .)
    MINUS           reduce using rule 37 (Result -> Result Oper Varoper .)
    MENOR           reduce using rule 37 (Result -> Result Oper Varoper .)
    MAIOR           reduce using rule 37 (Result -> Result Oper Varoper .)
    IGUAL           reduce using rule 37 (Result -> Result Oper Varoper .)
    DIFERENTE       reduce using rule 37 (Result -> Result Oper Varoper .)
    MAIORIGUAL      reduce using rule 37 (Result -> Result Oper Varoper .)
    MENORIGUAL      reduce using rule 37 (Result -> Result Oper Varoper .)
    IN              reduce using rule 37 (Result -> Result Oper Varoper .)
    FECHAP          reduce using rule 37 (Result -> Result Oper Varoper .)
    NEXT            reduce using rule 37 (Result -> Result Oper Varoper .)
    FECHAL          reduce using rule 37 (Result -> Result Oper Varoper .)
    VIR             reduce using rule 37 (Result -> Result Oper Varoper .)


state 86

    (39) Result -> Result Oper ABREP . Result FECHAP
    (34) Result -> . Opern Varoper
    (35) Result -> . Opern ABREP Result FECHAP
    (36) Result -> . Varoper
    (37) Result -> . Result Oper Varoper
    (38) Result -> . ABREP Result FECHAP
    (39) Result -> . Result Oper ABREP Result FECHAP
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 41
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Result                         shift and go to state 103
    Opern                          shift and go to state 39
    Varoper                        shift and go to state 40
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 87

    (35) Result -> Opern ABREP Result . FECHAP
    (37) Result -> Result . Oper Varoper
    (39) Result -> Result . Oper ABREP Result FECHAP
    (42) Oper -> . Opern
    (43) Oper -> . TIMES
    (44) Oper -> . DIVIDE
    (45) Oper -> . MOD
    (46) Oper -> . OR
    (47) Oper -> . AND
    (48) Oper -> . Conds
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    FECHAP          shift and go to state 104
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    OR              shift and go to state 60
    AND             shift and go to state 61
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Opern                          shift and go to state 56
    Oper                           shift and go to state 55
    Conds                          shift and go to state 62

state 88

    (38) Result -> ABREP Result FECHAP .

    PV              reduce using rule 38 (Result -> ABREP Result FECHAP .)
    TIMES           reduce using rule 38 (Result -> ABREP Result FECHAP .)
    DIVIDE          reduce using rule 38 (Result -> ABREP Result FECHAP .)
    MOD             reduce using rule 38 (Result -> ABREP Result FECHAP .)
    OR              reduce using rule 38 (Result -> ABREP Result FECHAP .)
    AND             reduce using rule 38 (Result -> ABREP Result FECHAP .)
    ADD             reduce using rule 38 (Result -> ABREP Result FECHAP .)
    MINUS           reduce using rule 38 (Result -> ABREP Result FECHAP .)
    MENOR           reduce using rule 38 (Result -> ABREP Result FECHAP .)
    MAIOR           reduce using rule 38 (Result -> ABREP Result FECHAP .)
    IGUAL           reduce using rule 38 (Result -> ABREP Result FECHAP .)
    DIFERENTE       reduce using rule 38 (Result -> ABREP Result FECHAP .)
    MAIORIGUAL      reduce using rule 38 (Result -> ABREP Result FECHAP .)
    MENORIGUAL      reduce using rule 38 (Result -> ABREP Result FECHAP .)
    IN              reduce using rule 38 (Result -> ABREP Result FECHAP .)
    FECHAP          reduce using rule 38 (Result -> ABREP Result FECHAP .)
    NEXT            reduce using rule 38 (Result -> ABREP Result FECHAP .)
    FECHAL          reduce using rule 38 (Result -> ABREP Result FECHAP .)
    VIR             reduce using rule 38 (Result -> ABREP Result FECHAP .)


state 89

    (60) Chamadafun -> WORD ABREP FECHAP .

    PV              reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    TIMES           reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    DIVIDE          reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    MOD             reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    OR              reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    AND             reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    ADD             reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    MINUS           reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    MENOR           reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    MAIOR           reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    IGUAL           reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    DIFERENTE       reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    MAIORIGUAL      reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    MENORIGUAL      reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    IN              reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    FECHAP          reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    NEXT            reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    FECHAL          reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    VIR             reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    CONDAND         reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)
    CONDOR          reduce using rule 60 (Chamadafun -> WORD ABREP FECHAP .)


state 90

    (61) Chamadafun -> WORD ABREP Conjunto . FECHAP
    (13) Conjunto -> Conjunto . VIR Result

    FECHAP          shift and go to state 105
    VIR             shift and go to state 93


state 91

    (14) Conjunto -> Result .
    (37) Result -> Result . Oper Varoper
    (39) Result -> Result . Oper ABREP Result FECHAP
    (42) Oper -> . Opern
    (43) Oper -> . TIMES
    (44) Oper -> . DIVIDE
    (45) Oper -> . MOD
    (46) Oper -> . OR
    (47) Oper -> . AND
    (48) Oper -> . Conds
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    FECHAP          reduce using rule 14 (Conjunto -> Result .)
    VIR             reduce using rule 14 (Conjunto -> Result .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    OR              shift and go to state 60
    AND             shift and go to state 61
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Oper                           shift and go to state 55
    Opern                          shift and go to state 56
    Conds                          shift and go to state 62

state 92

    (56) List -> ABREL Conjunto FECHAL .

    PV              reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    TIMES           reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    DIVIDE          reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    MOD             reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    OR              reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    AND             reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    ADD             reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    MINUS           reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    MENOR           reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    MAIOR           reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    IGUAL           reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    DIFERENTE       reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    MAIORIGUAL      reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    MENORIGUAL      reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    IN              reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    FECHAP          reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    NEXT            reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    FECHAL          reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    VIR             reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    CONDAND         reduce using rule 56 (List -> ABREL Conjunto FECHAL .)
    CONDOR          reduce using rule 56 (List -> ABREL Conjunto FECHAL .)


state 93

    (13) Conjunto -> Conjunto VIR . Result
    (34) Result -> . Opern Varoper
    (35) Result -> . Opern ABREP Result FECHAP
    (36) Result -> . Varoper
    (37) Result -> . Result Oper Varoper
    (38) Result -> . ABREP Result FECHAP
    (39) Result -> . Result Oper ABREP Result FECHAP
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 41
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Result                         shift and go to state 106
    Opern                          shift and go to state 39
    Varoper                        shift and go to state 40
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 94

    (57) List -> ABREL Result NEXT . Conjunto2 FECHAL
    (58) Conjunto2 -> . Result
    (59) Conjunto2 -> . Conjunto2 NEXT Result
    (34) Result -> . Opern Varoper
    (35) Result -> . Opern ABREP Result FECHAP
    (36) Result -> . Varoper
    (37) Result -> . Result Oper Varoper
    (38) Result -> . ABREP Result FECHAP
    (39) Result -> . Result Oper ABREP Result FECHAP
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 41
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Result                         shift and go to state 107
    Conjunto2                      shift and go to state 108
    Opern                          shift and go to state 39
    Varoper                        shift and go to state 40
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 95

    (21) CondSimple -> ABREP Cond . FECHAP
    (22) CondSimple -> ABREP Cond . FECHAP Conds Varoper
    (24) CondSimple -> ABREP Cond . FECHAP Conds ABREP Cond FECHAP
    (18) Cond -> Cond . CONDAND CondSimple
    (19) Cond -> Cond . CONDOR CondSimple

    FECHAP          shift and go to state 109
    CONDAND         shift and go to state 97
    CONDOR          shift and go to state 98


state 96

    (16) Corpofun -> IF ABREP Cond FECHAP . Corpofun ELSE Corpofun
    (15) Corpofun -> . RETURN Result PV
    (16) Corpofun -> . IF ABREP Cond FECHAP Corpofun ELSE Corpofun

    RETURN          shift and go to state 29
    IF              shift and go to state 30

    Corpofun                       shift and go to state 110

state 97

    (18) Cond -> Cond CONDAND . CondSimple
    (21) CondSimple -> . ABREP Cond FECHAP
    (22) CondSimple -> . ABREP Cond FECHAP Conds Varoper
    (23) CondSimple -> . Varoper Conds ABREP Cond FECHAP
    (24) CondSimple -> . ABREP Cond FECHAP Conds ABREP Cond FECHAP
    (25) CondSimple -> . Varoper Conds Varoper
    (26) CondSimple -> . Varoper
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 77
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    CondSimple                     shift and go to state 111
    Varoper                        shift and go to state 81
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 98

    (19) Cond -> Cond CONDOR . CondSimple
    (21) CondSimple -> . ABREP Cond FECHAP
    (22) CondSimple -> . ABREP Cond FECHAP Conds Varoper
    (23) CondSimple -> . Varoper Conds ABREP Cond FECHAP
    (24) CondSimple -> . ABREP Cond FECHAP Conds ABREP Cond FECHAP
    (25) CondSimple -> . Varoper Conds Varoper
    (26) CondSimple -> . Varoper
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 77
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    CondSimple                     shift and go to state 112
    Varoper                        shift and go to state 81
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 99

    (20) Cond -> NOT CondSimple .

    FECHAP          reduce using rule 20 (Cond -> NOT CondSimple .)
    CONDAND         reduce using rule 20 (Cond -> NOT CondSimple .)
    CONDOR          reduce using rule 20 (Cond -> NOT CondSimple .)


state 100

    (23) CondSimple -> Varoper Conds . ABREP Cond FECHAP
    (25) CondSimple -> Varoper Conds . Varoper
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 114
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Varoper                        shift and go to state 113
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 101

    (73) Conjunto2ListaArgs -> Conjunto2ListaArgs NEXT . VarArgs
    (62) VarArgs -> . BOOL
    (63) VarArgs -> . NUMBER
    (64) VarArgs -> . Opern NUMBER
    (65) VarArgs -> . ListArg
    (66) VarArgs -> . WORD
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (67) ListArg -> . ABREL FECHAL
    (68) ListArg -> . ABREL ConjuntoListaArgs FECHAL
    (69) ListArg -> . ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL

    BOOL            shift and go to state 19
    NUMBER          shift and go to state 20
    WORD            shift and go to state 15
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    ABREL           shift and go to state 25

    VarArgs                        shift and go to state 115
    Opern                          shift and go to state 21
    ListArg                        shift and go to state 22

state 102

    (69) ListArg -> ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL .

    FECHAP          reduce using rule 69 (ListArg -> ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL .)
    VIR             reduce using rule 69 (ListArg -> ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL .)
    NEXT            reduce using rule 69 (ListArg -> ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL .)
    FECHAL          reduce using rule 69 (ListArg -> ABREL VarArgs NEXT Conjunto2ListaArgs FECHAL .)


state 103

    (39) Result -> Result Oper ABREP Result . FECHAP
    (37) Result -> Result . Oper Varoper
    (39) Result -> Result . Oper ABREP Result FECHAP
    (42) Oper -> . Opern
    (43) Oper -> . TIMES
    (44) Oper -> . DIVIDE
    (45) Oper -> . MOD
    (46) Oper -> . OR
    (47) Oper -> . AND
    (48) Oper -> . Conds
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    FECHAP          shift and go to state 116
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    OR              shift and go to state 60
    AND             shift and go to state 61
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Oper                           shift and go to state 55
    Opern                          shift and go to state 56
    Conds                          shift and go to state 62

state 104

    (35) Result -> Opern ABREP Result FECHAP .

    PV              reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    TIMES           reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    DIVIDE          reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    MOD             reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    OR              reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    AND             reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    ADD             reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    MINUS           reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    MENOR           reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    MAIOR           reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    IGUAL           reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    DIFERENTE       reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    MAIORIGUAL      reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    MENORIGUAL      reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    IN              reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    FECHAP          reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    NEXT            reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    FECHAL          reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)
    VIR             reduce using rule 35 (Result -> Opern ABREP Result FECHAP .)


state 105

    (61) Chamadafun -> WORD ABREP Conjunto FECHAP .

    PV              reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    TIMES           reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    DIVIDE          reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MOD             reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    OR              reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    AND             reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    ADD             reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MINUS           reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MENOR           reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MAIOR           reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    IGUAL           reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    DIFERENTE       reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MAIORIGUAL      reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MENORIGUAL      reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    IN              reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    FECHAP          reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    NEXT            reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    FECHAL          reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    VIR             reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    CONDAND         reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    CONDOR          reduce using rule 61 (Chamadafun -> WORD ABREP Conjunto FECHAP .)


state 106

    (13) Conjunto -> Conjunto VIR Result .
    (37) Result -> Result . Oper Varoper
    (39) Result -> Result . Oper ABREP Result FECHAP
    (42) Oper -> . Opern
    (43) Oper -> . TIMES
    (44) Oper -> . DIVIDE
    (45) Oper -> . MOD
    (46) Oper -> . OR
    (47) Oper -> . AND
    (48) Oper -> . Conds
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    FECHAL          reduce using rule 13 (Conjunto -> Conjunto VIR Result .)
    VIR             reduce using rule 13 (Conjunto -> Conjunto VIR Result .)
    FECHAP          reduce using rule 13 (Conjunto -> Conjunto VIR Result .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    OR              shift and go to state 60
    AND             shift and go to state 61
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Oper                           shift and go to state 55
    Opern                          shift and go to state 56
    Conds                          shift and go to state 62

state 107

    (58) Conjunto2 -> Result .
    (37) Result -> Result . Oper Varoper
    (39) Result -> Result . Oper ABREP Result FECHAP
    (42) Oper -> . Opern
    (43) Oper -> . TIMES
    (44) Oper -> . DIVIDE
    (45) Oper -> . MOD
    (46) Oper -> . OR
    (47) Oper -> . AND
    (48) Oper -> . Conds
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    FECHAL          reduce using rule 58 (Conjunto2 -> Result .)
    NEXT            reduce using rule 58 (Conjunto2 -> Result .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    OR              shift and go to state 60
    AND             shift and go to state 61
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Oper                           shift and go to state 55
    Opern                          shift and go to state 56
    Conds                          shift and go to state 62

state 108

    (57) List -> ABREL Result NEXT Conjunto2 . FECHAL
    (59) Conjunto2 -> Conjunto2 . NEXT Result

    FECHAL          shift and go to state 118
    NEXT            shift and go to state 117


state 109

    (21) CondSimple -> ABREP Cond FECHAP .
    (22) CondSimple -> ABREP Cond FECHAP . Conds Varoper
    (24) CondSimple -> ABREP Cond FECHAP . Conds ABREP Cond FECHAP
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    FECHAP          reduce using rule 21 (CondSimple -> ABREP Cond FECHAP .)
    CONDAND         reduce using rule 21 (CondSimple -> ABREP Cond FECHAP .)
    CONDOR          reduce using rule 21 (CondSimple -> ABREP Cond FECHAP .)
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Conds                          shift and go to state 119

state 110

    (16) Corpofun -> IF ABREP Cond FECHAP Corpofun . ELSE Corpofun

    ELSE            shift and go to state 120


state 111

    (18) Cond -> Cond CONDAND CondSimple .

    FECHAP          reduce using rule 18 (Cond -> Cond CONDAND CondSimple .)
    CONDAND         reduce using rule 18 (Cond -> Cond CONDAND CondSimple .)
    CONDOR          reduce using rule 18 (Cond -> Cond CONDAND CondSimple .)


state 112

    (19) Cond -> Cond CONDOR CondSimple .

    FECHAP          reduce using rule 19 (Cond -> Cond CONDOR CondSimple .)
    CONDAND         reduce using rule 19 (Cond -> Cond CONDOR CondSimple .)
    CONDOR          reduce using rule 19 (Cond -> Cond CONDOR CondSimple .)


state 113

    (25) CondSimple -> Varoper Conds Varoper .

    FECHAP          reduce using rule 25 (CondSimple -> Varoper Conds Varoper .)
    CONDAND         reduce using rule 25 (CondSimple -> Varoper Conds Varoper .)
    CONDOR          reduce using rule 25 (CondSimple -> Varoper Conds Varoper .)


state 114

    (23) CondSimple -> Varoper Conds ABREP . Cond FECHAP
    (17) Cond -> . CondSimple
    (18) Cond -> . Cond CONDAND CondSimple
    (19) Cond -> . Cond CONDOR CondSimple
    (20) Cond -> . NOT CondSimple
    (21) CondSimple -> . ABREP Cond FECHAP
    (22) CondSimple -> . ABREP Cond FECHAP Conds Varoper
    (23) CondSimple -> . Varoper Conds ABREP Cond FECHAP
    (24) CondSimple -> . ABREP Cond FECHAP Conds ABREP Cond FECHAP
    (25) CondSimple -> . Varoper Conds Varoper
    (26) CondSimple -> . Varoper
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    NOT             shift and go to state 80
    ABREP           shift and go to state 77
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Varoper                        shift and go to state 81
    Cond                           shift and go to state 121
    CondSimple                     shift and go to state 79
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 115

    (73) Conjunto2ListaArgs -> Conjunto2ListaArgs NEXT VarArgs .

    FECHAL          reduce using rule 73 (Conjunto2ListaArgs -> Conjunto2ListaArgs NEXT VarArgs .)
    NEXT            reduce using rule 73 (Conjunto2ListaArgs -> Conjunto2ListaArgs NEXT VarArgs .)


state 116

    (39) Result -> Result Oper ABREP Result FECHAP .

    PV              reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    TIMES           reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    DIVIDE          reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    MOD             reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    OR              reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    AND             reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    ADD             reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    MINUS           reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    MENOR           reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    MAIOR           reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    IGUAL           reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    DIFERENTE       reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    MAIORIGUAL      reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    MENORIGUAL      reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    IN              reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    FECHAP          reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    NEXT            reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    FECHAL          reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)
    VIR             reduce using rule 39 (Result -> Result Oper ABREP Result FECHAP .)


state 117

    (59) Conjunto2 -> Conjunto2 NEXT . Result
    (34) Result -> . Opern Varoper
    (35) Result -> . Opern ABREP Result FECHAP
    (36) Result -> . Varoper
    (37) Result -> . Result Oper Varoper
    (38) Result -> . ABREP Result FECHAP
    (39) Result -> . Result Oper ABREP Result FECHAP
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 41
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Result                         shift and go to state 122
    Opern                          shift and go to state 39
    Varoper                        shift and go to state 40
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 118

    (57) List -> ABREL Result NEXT Conjunto2 FECHAL .

    PV              reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    TIMES           reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    DIVIDE          reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MOD             reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    OR              reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    AND             reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    ADD             reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MINUS           reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MENOR           reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MAIOR           reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    IGUAL           reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    DIFERENTE       reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MAIORIGUAL      reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MENORIGUAL      reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    IN              reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    FECHAP          reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    NEXT            reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    FECHAL          reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    VIR             reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    CONDAND         reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    CONDOR          reduce using rule 57 (List -> ABREL Result NEXT Conjunto2 FECHAL .)


state 119

    (22) CondSimple -> ABREP Cond FECHAP Conds . Varoper
    (24) CondSimple -> ABREP Cond FECHAP Conds . ABREP Cond FECHAP
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 123
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Varoper                        shift and go to state 124
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 120

    (16) Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE . Corpofun
    (15) Corpofun -> . RETURN Result PV
    (16) Corpofun -> . IF ABREP Cond FECHAP Corpofun ELSE Corpofun

    RETURN          shift and go to state 29
    IF              shift and go to state 30

    Corpofun                       shift and go to state 125

state 121

    (23) CondSimple -> Varoper Conds ABREP Cond . FECHAP
    (18) Cond -> Cond . CONDAND CondSimple
    (19) Cond -> Cond . CONDOR CondSimple

    FECHAP          shift and go to state 126
    CONDAND         shift and go to state 97
    CONDOR          shift and go to state 98


state 122

    (59) Conjunto2 -> Conjunto2 NEXT Result .
    (37) Result -> Result . Oper Varoper
    (39) Result -> Result . Oper ABREP Result FECHAP
    (42) Oper -> . Opern
    (43) Oper -> . TIMES
    (44) Oper -> . DIVIDE
    (45) Oper -> . MOD
    (46) Oper -> . OR
    (47) Oper -> . AND
    (48) Oper -> . Conds
    (40) Opern -> . ADD
    (41) Opern -> . MINUS
    (27) Conds -> . MENOR
    (28) Conds -> . MAIOR
    (29) Conds -> . IGUAL
    (30) Conds -> . DIFERENTE
    (31) Conds -> . MAIORIGUAL
    (32) Conds -> . MENORIGUAL
    (33) Conds -> . IN

    FECHAL          reduce using rule 59 (Conjunto2 -> Conjunto2 NEXT Result .)
    NEXT            reduce using rule 59 (Conjunto2 -> Conjunto2 NEXT Result .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MOD             shift and go to state 59
    OR              shift and go to state 60
    AND             shift and go to state 61
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 63
    MAIOR           shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAIORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    IN              shift and go to state 69

    Oper                           shift and go to state 55
    Opern                          shift and go to state 56
    Conds                          shift and go to state 62

state 123

    (24) CondSimple -> ABREP Cond FECHAP Conds ABREP . Cond FECHAP
    (17) Cond -> . CondSimple
    (18) Cond -> . Cond CONDAND CondSimple
    (19) Cond -> . Cond CONDOR CondSimple
    (20) Cond -> . NOT CondSimple
    (21) CondSimple -> . ABREP Cond FECHAP
    (22) CondSimple -> . ABREP Cond FECHAP Conds Varoper
    (23) CondSimple -> . Varoper Conds ABREP Cond FECHAP
    (24) CondSimple -> . ABREP Cond FECHAP Conds ABREP Cond FECHAP
    (25) CondSimple -> . Varoper Conds Varoper
    (26) CondSimple -> . Varoper
    (49) Varoper -> . Chamadafun
    (50) Varoper -> . Var
    (60) Chamadafun -> . WORD ABREP FECHAP
    (61) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (51) Var -> . NUMBER
    (52) Var -> . BOOL
    (53) Var -> . List
    (54) Var -> . WORD
    (55) List -> . ABREL FECHAL
    (56) List -> . ABREL Conjunto FECHAL
    (57) List -> . ABREL Result NEXT Conjunto2 FECHAL

    NOT             shift and go to state 80
    ABREP           shift and go to state 77
    WORD            shift and go to state 44
    NUMBER          shift and go to state 45
    BOOL            shift and go to state 46
    ABREL           shift and go to state 48

    Cond                           shift and go to state 127
    CondSimple                     shift and go to state 79
    Varoper                        shift and go to state 81
    Chamadafun                     shift and go to state 42
    Var                            shift and go to state 43
    List                           shift and go to state 47

state 124

    (22) CondSimple -> ABREP Cond FECHAP Conds Varoper .

    FECHAP          reduce using rule 22 (CondSimple -> ABREP Cond FECHAP Conds Varoper .)
    CONDAND         reduce using rule 22 (CondSimple -> ABREP Cond FECHAP Conds Varoper .)
    CONDOR          reduce using rule 22 (CondSimple -> ABREP Cond FECHAP Conds Varoper .)


state 125

    (16) Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE Corpofun .

    FUNFECHA        reduce using rule 16 (Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE Corpofun .)
    ELSE            reduce using rule 16 (Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE Corpofun .)


state 126

    (23) CondSimple -> Varoper Conds ABREP Cond FECHAP .

    FECHAP          reduce using rule 23 (CondSimple -> Varoper Conds ABREP Cond FECHAP .)
    CONDAND         reduce using rule 23 (CondSimple -> Varoper Conds ABREP Cond FECHAP .)
    CONDOR          reduce using rule 23 (CondSimple -> Varoper Conds ABREP Cond FECHAP .)


state 127

    (24) CondSimple -> ABREP Cond FECHAP Conds ABREP Cond . FECHAP
    (18) Cond -> Cond . CONDAND CondSimple
    (19) Cond -> Cond . CONDOR CondSimple

    FECHAP          shift and go to state 128
    CONDAND         shift and go to state 97
    CONDOR          shift and go to state 98


state 128

    (24) CondSimple -> ABREP Cond FECHAP Conds ABREP Cond FECHAP .

    FECHAP          reduce using rule 24 (CondSimple -> ABREP Cond FECHAP Conds ABREP Cond FECHAP .)
    CONDAND         reduce using rule 24 (CondSimple -> ABREP Cond FECHAP Conds ABREP Cond FECHAP .)
    CONDOR          reduce using rule 24 (CondSimple -> ABREP Cond FECHAP Conds ABREP Cond FECHAP .)

