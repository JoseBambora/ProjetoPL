Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Codigo
Rule 1     Codigo -> Codigo Python
Rule 2     Codigo -> Codigo CodigoFun
Rule 3     Codigo -> Python
Rule 4     Codigo -> CodigoFun
Rule 5     CodigoFun -> ABREFP Fpython FECHAFP
Rule 6     Python -> REST
Rule 7     Fpython -> Fpython Funcao
Rule 8     Fpython -> Funcao
Rule 9     Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA
Rule 10    Funcao -> FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA
Rule 11    Args -> Var
Rule 12    Args -> Opern NUMBER
Rule 13    Args -> Args VIR Var
Rule 14    Args -> Args VIR Opern NUMBER
Rule 15    Conjunto -> Conjunto VIR Result
Rule 16    Conjunto -> Result
Rule 17    Corpofun -> RETURN Result PV
Rule 18    Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE Corpofun
Rule 19    Cond -> CondSimple
Rule 20    Cond -> Cond CONDAND CondSimple
Rule 21    Cond -> Cond CONDOR CondSimple
Rule 22    CondSimple -> ABREP Cond FECHAP
Rule 23    Cond -> NOT CondSimple
Rule 24    CondSimple -> Varoper Conds Varoper
Rule 25    CondSimple -> Varoper
Rule 26    Conds -> MENOR
Rule 27    Conds -> MAIOR
Rule 28    Conds -> IGUAL
Rule 29    Conds -> DIFERENTE
Rule 30    Conds -> MAIORIGUAL
Rule 31    Conds -> MENORIGUAL
Rule 32    Conds -> IN
Rule 33    Result -> Varoper
Rule 34    Result -> Opern Sinais
Rule 35    Result -> Result Oper Varoper
Rule 36    Result -> ABREP Result FECHAP
Rule 37    Result -> Result Oper ABREP Result FECHAP
Rule 38    Opern -> ADD
Rule 39    Opern -> MINUS
Rule 40    Oper -> Opern
Rule 41    Oper -> TIMES
Rule 42    Oper -> DIVIDE
Rule 43    Oper -> MOD
Rule 44    Oper -> OR
Rule 45    Oper -> AND
Rule 46    Oper -> Conds
Rule 47    Varoper -> Chamadafun
Rule 48    Varoper -> Var
Rule 49    Var -> NUMBER
Rule 50    Var -> BOOL
Rule 51    Var -> List
Rule 52    Var -> WORD
Rule 53    List -> ABREL FECHAL
Rule 54    List -> ABREL Conjunto FECHAL
Rule 55    List -> ABREL Result NEXT Conjunto2 FECHAL
Rule 56    Conjunto2 -> Result
Rule 57    Conjunto2 -> Conjunto2 NEXT Result
Rule 58    Chamadafun -> WORD ABREP FECHAP
Rule 59    Chamadafun -> WORD ABREP Conjunto FECHAP
Rule 60    Sinais -> Chamadafun
Rule 61    Sinais -> WORD
Rule 62    Sinais -> NUMBER

Terminals, with rules where they appear

ABREFP               : 5
ABREL                : 53 54 55
ABREP                : 9 10 18 22 36 37 58 59
ADD                  : 38
AND                  : 45
BOOL                 : 50
CONDAND              : 20
CONDOR               : 21
DIFERENTE            : 29
DIVIDE               : 42
ELSE                 : 18
FECHAFP              : 5
FECHAL               : 53 54 55
FECHAP               : 9 10 18 22 36 37 58 59
FUNABRE              : 9 10
FUNFECHA             : 9 10
IF                   : 18
IGUAL                : 28
IN                   : 32
MAIOR                : 27
MAIORIGUAL           : 30
MENOR                : 26
MENORIGUAL           : 31
MINUS                : 39
MOD                  : 43
NEXT                 : 55 57
NOT                  : 23
NUMBER               : 12 14 49 62
OR                   : 44
PV                   : 17
REST                 : 6
RETURN               : 17
TIMES                : 41
VIR                  : 13 14 15
WORD                 : 9 10 52 58 59 61
error                : 

Nonterminals, with rules where they appear

Args                 : 9 13 14
Chamadafun           : 47 60
Codigo               : 1 2 0
CodigoFun            : 2 4
Cond                 : 18 20 21 22
CondSimple           : 19 20 21 23
Conds                : 24 46
Conjunto             : 15 54 59
Conjunto2            : 55 57
Corpofun             : 9 10 18 18
Fpython              : 5 7
Funcao               : 7 8
List                 : 51
Oper                 : 35 37
Opern                : 12 14 34 40
Python               : 1 3
Result               : 15 16 17 35 36 37 37 55 56 57
Sinais               : 34
Var                  : 11 13 48
Varoper              : 24 24 25 33 35

Parsing method: LALR

state 0

    (0) S' -> . Codigo
    (1) Codigo -> . Codigo Python
    (2) Codigo -> . Codigo CodigoFun
    (3) Codigo -> . Python
    (4) Codigo -> . CodigoFun
    (6) Python -> . REST
    (5) CodigoFun -> . ABREFP Fpython FECHAFP

    REST            shift and go to state 4
    ABREFP          shift and go to state 5

    Codigo                         shift and go to state 1
    Python                         shift and go to state 2
    CodigoFun                      shift and go to state 3

state 1

    (0) S' -> Codigo .
    (1) Codigo -> Codigo . Python
    (2) Codigo -> Codigo . CodigoFun
    (6) Python -> . REST
    (5) CodigoFun -> . ABREFP Fpython FECHAFP

    REST            shift and go to state 4
    ABREFP          shift and go to state 5

    Python                         shift and go to state 6
    CodigoFun                      shift and go to state 7

state 2

    (3) Codigo -> Python .

    REST            reduce using rule 3 (Codigo -> Python .)
    ABREFP          reduce using rule 3 (Codigo -> Python .)
    $end            reduce using rule 3 (Codigo -> Python .)


state 3

    (4) Codigo -> CodigoFun .

    REST            reduce using rule 4 (Codigo -> CodigoFun .)
    ABREFP          reduce using rule 4 (Codigo -> CodigoFun .)
    $end            reduce using rule 4 (Codigo -> CodigoFun .)


state 4

    (6) Python -> REST .

    REST            reduce using rule 6 (Python -> REST .)
    ABREFP          reduce using rule 6 (Python -> REST .)
    $end            reduce using rule 6 (Python -> REST .)


state 5

    (5) CodigoFun -> ABREFP . Fpython FECHAFP
    (7) Fpython -> . Fpython Funcao
    (8) Fpython -> . Funcao
    (9) Funcao -> . FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA
    (10) Funcao -> . FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA

    FUNABRE         shift and go to state 10

    Fpython                        shift and go to state 8
    Funcao                         shift and go to state 9

state 6

    (1) Codigo -> Codigo Python .

    REST            reduce using rule 1 (Codigo -> Codigo Python .)
    ABREFP          reduce using rule 1 (Codigo -> Codigo Python .)
    $end            reduce using rule 1 (Codigo -> Codigo Python .)


state 7

    (2) Codigo -> Codigo CodigoFun .

    REST            reduce using rule 2 (Codigo -> Codigo CodigoFun .)
    ABREFP          reduce using rule 2 (Codigo -> Codigo CodigoFun .)
    $end            reduce using rule 2 (Codigo -> Codigo CodigoFun .)


state 8

    (5) CodigoFun -> ABREFP Fpython . FECHAFP
    (7) Fpython -> Fpython . Funcao
    (9) Funcao -> . FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA
    (10) Funcao -> . FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA

    FECHAFP         shift and go to state 11
    FUNABRE         shift and go to state 10

    Funcao                         shift and go to state 12

state 9

    (8) Fpython -> Funcao .

    FECHAFP         reduce using rule 8 (Fpython -> Funcao .)
    FUNABRE         reduce using rule 8 (Fpython -> Funcao .)


state 10

    (9) Funcao -> FUNABRE . WORD ABREP Args FECHAP Corpofun FUNFECHA
    (10) Funcao -> FUNABRE . WORD ABREP FECHAP Corpofun FUNFECHA

    WORD            shift and go to state 13


state 11

    (5) CodigoFun -> ABREFP Fpython FECHAFP .

    REST            reduce using rule 5 (CodigoFun -> ABREFP Fpython FECHAFP .)
    ABREFP          reduce using rule 5 (CodigoFun -> ABREFP Fpython FECHAFP .)
    $end            reduce using rule 5 (CodigoFun -> ABREFP Fpython FECHAFP .)


state 12

    (7) Fpython -> Fpython Funcao .

    FECHAFP         reduce using rule 7 (Fpython -> Fpython Funcao .)
    FUNABRE         reduce using rule 7 (Fpython -> Fpython Funcao .)


state 13

    (9) Funcao -> FUNABRE WORD . ABREP Args FECHAP Corpofun FUNFECHA
    (10) Funcao -> FUNABRE WORD . ABREP FECHAP Corpofun FUNFECHA

    ABREP           shift and go to state 14


state 14

    (9) Funcao -> FUNABRE WORD ABREP . Args FECHAP Corpofun FUNFECHA
    (10) Funcao -> FUNABRE WORD ABREP . FECHAP Corpofun FUNFECHA
    (11) Args -> . Var
    (12) Args -> . Opern NUMBER
    (13) Args -> . Args VIR Var
    (14) Args -> . Args VIR Opern NUMBER
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    FECHAP          shift and go to state 17
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    WORD            shift and go to state 15
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    ABREL           shift and go to state 25

    Args                           shift and go to state 16
    Var                            shift and go to state 18
    Opern                          shift and go to state 19
    List                           shift and go to state 22

state 15

    (52) Var -> WORD .

    FECHAP          reduce using rule 52 (Var -> WORD .)
    VIR             reduce using rule 52 (Var -> WORD .)


state 16

    (9) Funcao -> FUNABRE WORD ABREP Args . FECHAP Corpofun FUNFECHA
    (13) Args -> Args . VIR Var
    (14) Args -> Args . VIR Opern NUMBER

    FECHAP          shift and go to state 26
    VIR             shift and go to state 27


state 17

    (10) Funcao -> FUNABRE WORD ABREP FECHAP . Corpofun FUNFECHA
    (17) Corpofun -> . RETURN Result PV
    (18) Corpofun -> . IF ABREP Cond FECHAP Corpofun ELSE Corpofun

    RETURN          shift and go to state 29
    IF              shift and go to state 30

    Corpofun                       shift and go to state 28

state 18

    (11) Args -> Var .

    FECHAP          reduce using rule 11 (Args -> Var .)
    VIR             reduce using rule 11 (Args -> Var .)


state 19

    (12) Args -> Opern . NUMBER

    NUMBER          shift and go to state 31


state 20

    (49) Var -> NUMBER .

    FECHAP          reduce using rule 49 (Var -> NUMBER .)
    VIR             reduce using rule 49 (Var -> NUMBER .)
    NEXT            reduce using rule 49 (Var -> NUMBER .)
    TIMES           reduce using rule 49 (Var -> NUMBER .)
    DIVIDE          reduce using rule 49 (Var -> NUMBER .)
    MOD             reduce using rule 49 (Var -> NUMBER .)
    OR              reduce using rule 49 (Var -> NUMBER .)
    AND             reduce using rule 49 (Var -> NUMBER .)
    ADD             reduce using rule 49 (Var -> NUMBER .)
    MINUS           reduce using rule 49 (Var -> NUMBER .)
    MENOR           reduce using rule 49 (Var -> NUMBER .)
    MAIOR           reduce using rule 49 (Var -> NUMBER .)
    IGUAL           reduce using rule 49 (Var -> NUMBER .)
    DIFERENTE       reduce using rule 49 (Var -> NUMBER .)
    MAIORIGUAL      reduce using rule 49 (Var -> NUMBER .)
    MENORIGUAL      reduce using rule 49 (Var -> NUMBER .)
    IN              reduce using rule 49 (Var -> NUMBER .)
    FECHAL          reduce using rule 49 (Var -> NUMBER .)
    PV              reduce using rule 49 (Var -> NUMBER .)
    CONDAND         reduce using rule 49 (Var -> NUMBER .)
    CONDOR          reduce using rule 49 (Var -> NUMBER .)


state 21

    (50) Var -> BOOL .

    FECHAP          reduce using rule 50 (Var -> BOOL .)
    VIR             reduce using rule 50 (Var -> BOOL .)
    NEXT            reduce using rule 50 (Var -> BOOL .)
    TIMES           reduce using rule 50 (Var -> BOOL .)
    DIVIDE          reduce using rule 50 (Var -> BOOL .)
    MOD             reduce using rule 50 (Var -> BOOL .)
    OR              reduce using rule 50 (Var -> BOOL .)
    AND             reduce using rule 50 (Var -> BOOL .)
    ADD             reduce using rule 50 (Var -> BOOL .)
    MINUS           reduce using rule 50 (Var -> BOOL .)
    MENOR           reduce using rule 50 (Var -> BOOL .)
    MAIOR           reduce using rule 50 (Var -> BOOL .)
    IGUAL           reduce using rule 50 (Var -> BOOL .)
    DIFERENTE       reduce using rule 50 (Var -> BOOL .)
    MAIORIGUAL      reduce using rule 50 (Var -> BOOL .)
    MENORIGUAL      reduce using rule 50 (Var -> BOOL .)
    IN              reduce using rule 50 (Var -> BOOL .)
    FECHAL          reduce using rule 50 (Var -> BOOL .)
    PV              reduce using rule 50 (Var -> BOOL .)
    CONDAND         reduce using rule 50 (Var -> BOOL .)
    CONDOR          reduce using rule 50 (Var -> BOOL .)


state 22

    (51) Var -> List .

    FECHAP          reduce using rule 51 (Var -> List .)
    VIR             reduce using rule 51 (Var -> List .)
    NEXT            reduce using rule 51 (Var -> List .)
    TIMES           reduce using rule 51 (Var -> List .)
    DIVIDE          reduce using rule 51 (Var -> List .)
    MOD             reduce using rule 51 (Var -> List .)
    OR              reduce using rule 51 (Var -> List .)
    AND             reduce using rule 51 (Var -> List .)
    ADD             reduce using rule 51 (Var -> List .)
    MINUS           reduce using rule 51 (Var -> List .)
    MENOR           reduce using rule 51 (Var -> List .)
    MAIOR           reduce using rule 51 (Var -> List .)
    IGUAL           reduce using rule 51 (Var -> List .)
    DIFERENTE       reduce using rule 51 (Var -> List .)
    MAIORIGUAL      reduce using rule 51 (Var -> List .)
    MENORIGUAL      reduce using rule 51 (Var -> List .)
    IN              reduce using rule 51 (Var -> List .)
    FECHAL          reduce using rule 51 (Var -> List .)
    PV              reduce using rule 51 (Var -> List .)
    CONDAND         reduce using rule 51 (Var -> List .)
    CONDOR          reduce using rule 51 (Var -> List .)


state 23

    (38) Opern -> ADD .

    NUMBER          reduce using rule 38 (Opern -> ADD .)
    WORD            reduce using rule 38 (Opern -> ADD .)
    ABREP           reduce using rule 38 (Opern -> ADD .)
    BOOL            reduce using rule 38 (Opern -> ADD .)
    ABREL           reduce using rule 38 (Opern -> ADD .)


state 24

    (39) Opern -> MINUS .

    NUMBER          reduce using rule 39 (Opern -> MINUS .)
    WORD            reduce using rule 39 (Opern -> MINUS .)
    ABREP           reduce using rule 39 (Opern -> MINUS .)
    BOOL            reduce using rule 39 (Opern -> MINUS .)
    ABREL           reduce using rule 39 (Opern -> MINUS .)


state 25

    (53) List -> ABREL . FECHAL
    (54) List -> ABREL . Conjunto FECHAL
    (55) List -> ABREL . Result NEXT Conjunto2 FECHAL
    (15) Conjunto -> . Conjunto VIR Result
    (16) Conjunto -> . Result
    (33) Result -> . Varoper
    (34) Result -> . Opern Sinais
    (35) Result -> . Result Oper Varoper
    (36) Result -> . ABREP Result FECHAP
    (37) Result -> . Result Oper ABREP Result FECHAP
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    FECHAL          shift and go to state 32
    ABREP           shift and go to state 37
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Conjunto                       shift and go to state 33
    Result                         shift and go to state 34
    Varoper                        shift and go to state 35
    Opern                          shift and go to state 36
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 26

    (9) Funcao -> FUNABRE WORD ABREP Args FECHAP . Corpofun FUNFECHA
    (17) Corpofun -> . RETURN Result PV
    (18) Corpofun -> . IF ABREP Cond FECHAP Corpofun ELSE Corpofun

    RETURN          shift and go to state 29
    IF              shift and go to state 30

    Corpofun                       shift and go to state 41

state 27

    (13) Args -> Args VIR . Var
    (14) Args -> Args VIR . Opern NUMBER
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    WORD            shift and go to state 15
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    ABREL           shift and go to state 25

    Var                            shift and go to state 42
    Opern                          shift and go to state 43
    List                           shift and go to state 22

state 28

    (10) Funcao -> FUNABRE WORD ABREP FECHAP Corpofun . FUNFECHA

    FUNFECHA        shift and go to state 44


state 29

    (17) Corpofun -> RETURN . Result PV
    (33) Result -> . Varoper
    (34) Result -> . Opern Sinais
    (35) Result -> . Result Oper Varoper
    (36) Result -> . ABREP Result FECHAP
    (37) Result -> . Result Oper ABREP Result FECHAP
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 37
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Result                         shift and go to state 45
    Varoper                        shift and go to state 35
    Opern                          shift and go to state 36
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 30

    (18) Corpofun -> IF . ABREP Cond FECHAP Corpofun ELSE Corpofun

    ABREP           shift and go to state 46


state 31

    (12) Args -> Opern NUMBER .

    FECHAP          reduce using rule 12 (Args -> Opern NUMBER .)
    VIR             reduce using rule 12 (Args -> Opern NUMBER .)


state 32

    (53) List -> ABREL FECHAL .

    FECHAP          reduce using rule 53 (List -> ABREL FECHAL .)
    VIR             reduce using rule 53 (List -> ABREL FECHAL .)
    NEXT            reduce using rule 53 (List -> ABREL FECHAL .)
    TIMES           reduce using rule 53 (List -> ABREL FECHAL .)
    DIVIDE          reduce using rule 53 (List -> ABREL FECHAL .)
    MOD             reduce using rule 53 (List -> ABREL FECHAL .)
    OR              reduce using rule 53 (List -> ABREL FECHAL .)
    AND             reduce using rule 53 (List -> ABREL FECHAL .)
    ADD             reduce using rule 53 (List -> ABREL FECHAL .)
    MINUS           reduce using rule 53 (List -> ABREL FECHAL .)
    MENOR           reduce using rule 53 (List -> ABREL FECHAL .)
    MAIOR           reduce using rule 53 (List -> ABREL FECHAL .)
    IGUAL           reduce using rule 53 (List -> ABREL FECHAL .)
    DIFERENTE       reduce using rule 53 (List -> ABREL FECHAL .)
    MAIORIGUAL      reduce using rule 53 (List -> ABREL FECHAL .)
    MENORIGUAL      reduce using rule 53 (List -> ABREL FECHAL .)
    IN              reduce using rule 53 (List -> ABREL FECHAL .)
    FECHAL          reduce using rule 53 (List -> ABREL FECHAL .)
    PV              reduce using rule 53 (List -> ABREL FECHAL .)
    CONDAND         reduce using rule 53 (List -> ABREL FECHAL .)
    CONDOR          reduce using rule 53 (List -> ABREL FECHAL .)


state 33

    (54) List -> ABREL Conjunto . FECHAL
    (15) Conjunto -> Conjunto . VIR Result

    FECHAL          shift and go to state 47
    VIR             shift and go to state 48


state 34

    (55) List -> ABREL Result . NEXT Conjunto2 FECHAL
    (16) Conjunto -> Result .
    (35) Result -> Result . Oper Varoper
    (37) Result -> Result . Oper ABREP Result FECHAP
    (40) Oper -> . Opern
    (41) Oper -> . TIMES
    (42) Oper -> . DIVIDE
    (43) Oper -> . MOD
    (44) Oper -> . OR
    (45) Oper -> . AND
    (46) Oper -> . Conds
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (26) Conds -> . MENOR
    (27) Conds -> . MAIOR
    (28) Conds -> . IGUAL
    (29) Conds -> . DIFERENTE
    (30) Conds -> . MAIORIGUAL
    (31) Conds -> . MENORIGUAL
    (32) Conds -> . IN

    NEXT            shift and go to state 49
    FECHAL          reduce using rule 16 (Conjunto -> Result .)
    VIR             reduce using rule 16 (Conjunto -> Result .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 58
    MAIOR           shift and go to state 59
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAIORIGUAL      shift and go to state 62
    MENORIGUAL      shift and go to state 63
    IN              shift and go to state 64

    Oper                           shift and go to state 50
    Opern                          shift and go to state 51
    Conds                          shift and go to state 57

state 35

    (33) Result -> Varoper .

    NEXT            reduce using rule 33 (Result -> Varoper .)
    TIMES           reduce using rule 33 (Result -> Varoper .)
    DIVIDE          reduce using rule 33 (Result -> Varoper .)
    MOD             reduce using rule 33 (Result -> Varoper .)
    OR              reduce using rule 33 (Result -> Varoper .)
    AND             reduce using rule 33 (Result -> Varoper .)
    ADD             reduce using rule 33 (Result -> Varoper .)
    MINUS           reduce using rule 33 (Result -> Varoper .)
    MENOR           reduce using rule 33 (Result -> Varoper .)
    MAIOR           reduce using rule 33 (Result -> Varoper .)
    IGUAL           reduce using rule 33 (Result -> Varoper .)
    DIFERENTE       reduce using rule 33 (Result -> Varoper .)
    MAIORIGUAL      reduce using rule 33 (Result -> Varoper .)
    MENORIGUAL      reduce using rule 33 (Result -> Varoper .)
    IN              reduce using rule 33 (Result -> Varoper .)
    FECHAL          reduce using rule 33 (Result -> Varoper .)
    VIR             reduce using rule 33 (Result -> Varoper .)
    PV              reduce using rule 33 (Result -> Varoper .)
    FECHAP          reduce using rule 33 (Result -> Varoper .)


state 36

    (34) Result -> Opern . Sinais
    (60) Sinais -> . Chamadafun
    (61) Sinais -> . WORD
    (62) Sinais -> . NUMBER
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP

    WORD            shift and go to state 67
    NUMBER          shift and go to state 68

    Sinais                         shift and go to state 65
    Chamadafun                     shift and go to state 66

state 37

    (36) Result -> ABREP . Result FECHAP
    (33) Result -> . Varoper
    (34) Result -> . Opern Sinais
    (35) Result -> . Result Oper Varoper
    (36) Result -> . ABREP Result FECHAP
    (37) Result -> . Result Oper ABREP Result FECHAP
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 37
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Result                         shift and go to state 69
    Varoper                        shift and go to state 35
    Opern                          shift and go to state 36
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 38

    (47) Varoper -> Chamadafun .

    NEXT            reduce using rule 47 (Varoper -> Chamadafun .)
    TIMES           reduce using rule 47 (Varoper -> Chamadafun .)
    DIVIDE          reduce using rule 47 (Varoper -> Chamadafun .)
    MOD             reduce using rule 47 (Varoper -> Chamadafun .)
    OR              reduce using rule 47 (Varoper -> Chamadafun .)
    AND             reduce using rule 47 (Varoper -> Chamadafun .)
    ADD             reduce using rule 47 (Varoper -> Chamadafun .)
    MINUS           reduce using rule 47 (Varoper -> Chamadafun .)
    MENOR           reduce using rule 47 (Varoper -> Chamadafun .)
    MAIOR           reduce using rule 47 (Varoper -> Chamadafun .)
    IGUAL           reduce using rule 47 (Varoper -> Chamadafun .)
    DIFERENTE       reduce using rule 47 (Varoper -> Chamadafun .)
    MAIORIGUAL      reduce using rule 47 (Varoper -> Chamadafun .)
    MENORIGUAL      reduce using rule 47 (Varoper -> Chamadafun .)
    IN              reduce using rule 47 (Varoper -> Chamadafun .)
    FECHAL          reduce using rule 47 (Varoper -> Chamadafun .)
    VIR             reduce using rule 47 (Varoper -> Chamadafun .)
    PV              reduce using rule 47 (Varoper -> Chamadafun .)
    FECHAP          reduce using rule 47 (Varoper -> Chamadafun .)
    CONDAND         reduce using rule 47 (Varoper -> Chamadafun .)
    CONDOR          reduce using rule 47 (Varoper -> Chamadafun .)


state 39

    (48) Varoper -> Var .

    NEXT            reduce using rule 48 (Varoper -> Var .)
    TIMES           reduce using rule 48 (Varoper -> Var .)
    DIVIDE          reduce using rule 48 (Varoper -> Var .)
    MOD             reduce using rule 48 (Varoper -> Var .)
    OR              reduce using rule 48 (Varoper -> Var .)
    AND             reduce using rule 48 (Varoper -> Var .)
    ADD             reduce using rule 48 (Varoper -> Var .)
    MINUS           reduce using rule 48 (Varoper -> Var .)
    MENOR           reduce using rule 48 (Varoper -> Var .)
    MAIOR           reduce using rule 48 (Varoper -> Var .)
    IGUAL           reduce using rule 48 (Varoper -> Var .)
    DIFERENTE       reduce using rule 48 (Varoper -> Var .)
    MAIORIGUAL      reduce using rule 48 (Varoper -> Var .)
    MENORIGUAL      reduce using rule 48 (Varoper -> Var .)
    IN              reduce using rule 48 (Varoper -> Var .)
    FECHAL          reduce using rule 48 (Varoper -> Var .)
    VIR             reduce using rule 48 (Varoper -> Var .)
    PV              reduce using rule 48 (Varoper -> Var .)
    FECHAP          reduce using rule 48 (Varoper -> Var .)
    CONDAND         reduce using rule 48 (Varoper -> Var .)
    CONDOR          reduce using rule 48 (Varoper -> Var .)


state 40

    (58) Chamadafun -> WORD . ABREP FECHAP
    (59) Chamadafun -> WORD . ABREP Conjunto FECHAP
    (52) Var -> WORD .

    ABREP           shift and go to state 70
    NEXT            reduce using rule 52 (Var -> WORD .)
    TIMES           reduce using rule 52 (Var -> WORD .)
    DIVIDE          reduce using rule 52 (Var -> WORD .)
    MOD             reduce using rule 52 (Var -> WORD .)
    OR              reduce using rule 52 (Var -> WORD .)
    AND             reduce using rule 52 (Var -> WORD .)
    ADD             reduce using rule 52 (Var -> WORD .)
    MINUS           reduce using rule 52 (Var -> WORD .)
    MENOR           reduce using rule 52 (Var -> WORD .)
    MAIOR           reduce using rule 52 (Var -> WORD .)
    IGUAL           reduce using rule 52 (Var -> WORD .)
    DIFERENTE       reduce using rule 52 (Var -> WORD .)
    MAIORIGUAL      reduce using rule 52 (Var -> WORD .)
    MENORIGUAL      reduce using rule 52 (Var -> WORD .)
    IN              reduce using rule 52 (Var -> WORD .)
    FECHAL          reduce using rule 52 (Var -> WORD .)
    VIR             reduce using rule 52 (Var -> WORD .)
    PV              reduce using rule 52 (Var -> WORD .)
    FECHAP          reduce using rule 52 (Var -> WORD .)
    CONDAND         reduce using rule 52 (Var -> WORD .)
    CONDOR          reduce using rule 52 (Var -> WORD .)


state 41

    (9) Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun . FUNFECHA

    FUNFECHA        shift and go to state 71


state 42

    (13) Args -> Args VIR Var .

    FECHAP          reduce using rule 13 (Args -> Args VIR Var .)
    VIR             reduce using rule 13 (Args -> Args VIR Var .)


state 43

    (14) Args -> Args VIR Opern . NUMBER

    NUMBER          shift and go to state 72


state 44

    (10) Funcao -> FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA .

    FECHAFP         reduce using rule 10 (Funcao -> FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA .)
    FUNABRE         reduce using rule 10 (Funcao -> FUNABRE WORD ABREP FECHAP Corpofun FUNFECHA .)


state 45

    (17) Corpofun -> RETURN Result . PV
    (35) Result -> Result . Oper Varoper
    (37) Result -> Result . Oper ABREP Result FECHAP
    (40) Oper -> . Opern
    (41) Oper -> . TIMES
    (42) Oper -> . DIVIDE
    (43) Oper -> . MOD
    (44) Oper -> . OR
    (45) Oper -> . AND
    (46) Oper -> . Conds
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (26) Conds -> . MENOR
    (27) Conds -> . MAIOR
    (28) Conds -> . IGUAL
    (29) Conds -> . DIFERENTE
    (30) Conds -> . MAIORIGUAL
    (31) Conds -> . MENORIGUAL
    (32) Conds -> . IN

    PV              shift and go to state 73
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 58
    MAIOR           shift and go to state 59
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAIORIGUAL      shift and go to state 62
    MENORIGUAL      shift and go to state 63
    IN              shift and go to state 64

    Oper                           shift and go to state 50
    Opern                          shift and go to state 51
    Conds                          shift and go to state 57

state 46

    (18) Corpofun -> IF ABREP . Cond FECHAP Corpofun ELSE Corpofun
    (19) Cond -> . CondSimple
    (20) Cond -> . Cond CONDAND CondSimple
    (21) Cond -> . Cond CONDOR CondSimple
    (23) Cond -> . NOT CondSimple
    (22) CondSimple -> . ABREP Cond FECHAP
    (24) CondSimple -> . Varoper Conds Varoper
    (25) CondSimple -> . Varoper
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    NOT             shift and go to state 77
    ABREP           shift and go to state 74
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Cond                           shift and go to state 75
    CondSimple                     shift and go to state 76
    Varoper                        shift and go to state 78
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 47

    (54) List -> ABREL Conjunto FECHAL .

    FECHAP          reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    VIR             reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    NEXT            reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    TIMES           reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    DIVIDE          reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    MOD             reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    OR              reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    AND             reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    ADD             reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    MINUS           reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    MENOR           reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    MAIOR           reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    IGUAL           reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    DIFERENTE       reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    MAIORIGUAL      reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    MENORIGUAL      reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    IN              reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    FECHAL          reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    PV              reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    CONDAND         reduce using rule 54 (List -> ABREL Conjunto FECHAL .)
    CONDOR          reduce using rule 54 (List -> ABREL Conjunto FECHAL .)


state 48

    (15) Conjunto -> Conjunto VIR . Result
    (33) Result -> . Varoper
    (34) Result -> . Opern Sinais
    (35) Result -> . Result Oper Varoper
    (36) Result -> . ABREP Result FECHAP
    (37) Result -> . Result Oper ABREP Result FECHAP
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 37
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Result                         shift and go to state 79
    Varoper                        shift and go to state 35
    Opern                          shift and go to state 36
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 49

    (55) List -> ABREL Result NEXT . Conjunto2 FECHAL
    (56) Conjunto2 -> . Result
    (57) Conjunto2 -> . Conjunto2 NEXT Result
    (33) Result -> . Varoper
    (34) Result -> . Opern Sinais
    (35) Result -> . Result Oper Varoper
    (36) Result -> . ABREP Result FECHAP
    (37) Result -> . Result Oper ABREP Result FECHAP
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 37
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Result                         shift and go to state 80
    Conjunto2                      shift and go to state 81
    Varoper                        shift and go to state 35
    Opern                          shift and go to state 36
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 50

    (35) Result -> Result Oper . Varoper
    (37) Result -> Result Oper . ABREP Result FECHAP
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 83
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Varoper                        shift and go to state 82
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 51

    (40) Oper -> Opern .

    ABREP           reduce using rule 40 (Oper -> Opern .)
    WORD            reduce using rule 40 (Oper -> Opern .)
    NUMBER          reduce using rule 40 (Oper -> Opern .)
    BOOL            reduce using rule 40 (Oper -> Opern .)
    ABREL           reduce using rule 40 (Oper -> Opern .)


state 52

    (41) Oper -> TIMES .

    ABREP           reduce using rule 41 (Oper -> TIMES .)
    WORD            reduce using rule 41 (Oper -> TIMES .)
    NUMBER          reduce using rule 41 (Oper -> TIMES .)
    BOOL            reduce using rule 41 (Oper -> TIMES .)
    ABREL           reduce using rule 41 (Oper -> TIMES .)


state 53

    (42) Oper -> DIVIDE .

    ABREP           reduce using rule 42 (Oper -> DIVIDE .)
    WORD            reduce using rule 42 (Oper -> DIVIDE .)
    NUMBER          reduce using rule 42 (Oper -> DIVIDE .)
    BOOL            reduce using rule 42 (Oper -> DIVIDE .)
    ABREL           reduce using rule 42 (Oper -> DIVIDE .)


state 54

    (43) Oper -> MOD .

    ABREP           reduce using rule 43 (Oper -> MOD .)
    WORD            reduce using rule 43 (Oper -> MOD .)
    NUMBER          reduce using rule 43 (Oper -> MOD .)
    BOOL            reduce using rule 43 (Oper -> MOD .)
    ABREL           reduce using rule 43 (Oper -> MOD .)


state 55

    (44) Oper -> OR .

    ABREP           reduce using rule 44 (Oper -> OR .)
    WORD            reduce using rule 44 (Oper -> OR .)
    NUMBER          reduce using rule 44 (Oper -> OR .)
    BOOL            reduce using rule 44 (Oper -> OR .)
    ABREL           reduce using rule 44 (Oper -> OR .)


state 56

    (45) Oper -> AND .

    ABREP           reduce using rule 45 (Oper -> AND .)
    WORD            reduce using rule 45 (Oper -> AND .)
    NUMBER          reduce using rule 45 (Oper -> AND .)
    BOOL            reduce using rule 45 (Oper -> AND .)
    ABREL           reduce using rule 45 (Oper -> AND .)


state 57

    (46) Oper -> Conds .

    ABREP           reduce using rule 46 (Oper -> Conds .)
    WORD            reduce using rule 46 (Oper -> Conds .)
    NUMBER          reduce using rule 46 (Oper -> Conds .)
    BOOL            reduce using rule 46 (Oper -> Conds .)
    ABREL           reduce using rule 46 (Oper -> Conds .)


state 58

    (26) Conds -> MENOR .

    ABREP           reduce using rule 26 (Conds -> MENOR .)
    WORD            reduce using rule 26 (Conds -> MENOR .)
    NUMBER          reduce using rule 26 (Conds -> MENOR .)
    BOOL            reduce using rule 26 (Conds -> MENOR .)
    ABREL           reduce using rule 26 (Conds -> MENOR .)


state 59

    (27) Conds -> MAIOR .

    ABREP           reduce using rule 27 (Conds -> MAIOR .)
    WORD            reduce using rule 27 (Conds -> MAIOR .)
    NUMBER          reduce using rule 27 (Conds -> MAIOR .)
    BOOL            reduce using rule 27 (Conds -> MAIOR .)
    ABREL           reduce using rule 27 (Conds -> MAIOR .)


state 60

    (28) Conds -> IGUAL .

    ABREP           reduce using rule 28 (Conds -> IGUAL .)
    WORD            reduce using rule 28 (Conds -> IGUAL .)
    NUMBER          reduce using rule 28 (Conds -> IGUAL .)
    BOOL            reduce using rule 28 (Conds -> IGUAL .)
    ABREL           reduce using rule 28 (Conds -> IGUAL .)


state 61

    (29) Conds -> DIFERENTE .

    ABREP           reduce using rule 29 (Conds -> DIFERENTE .)
    WORD            reduce using rule 29 (Conds -> DIFERENTE .)
    NUMBER          reduce using rule 29 (Conds -> DIFERENTE .)
    BOOL            reduce using rule 29 (Conds -> DIFERENTE .)
    ABREL           reduce using rule 29 (Conds -> DIFERENTE .)


state 62

    (30) Conds -> MAIORIGUAL .

    ABREP           reduce using rule 30 (Conds -> MAIORIGUAL .)
    WORD            reduce using rule 30 (Conds -> MAIORIGUAL .)
    NUMBER          reduce using rule 30 (Conds -> MAIORIGUAL .)
    BOOL            reduce using rule 30 (Conds -> MAIORIGUAL .)
    ABREL           reduce using rule 30 (Conds -> MAIORIGUAL .)


state 63

    (31) Conds -> MENORIGUAL .

    ABREP           reduce using rule 31 (Conds -> MENORIGUAL .)
    WORD            reduce using rule 31 (Conds -> MENORIGUAL .)
    NUMBER          reduce using rule 31 (Conds -> MENORIGUAL .)
    BOOL            reduce using rule 31 (Conds -> MENORIGUAL .)
    ABREL           reduce using rule 31 (Conds -> MENORIGUAL .)


state 64

    (32) Conds -> IN .

    ABREP           reduce using rule 32 (Conds -> IN .)
    WORD            reduce using rule 32 (Conds -> IN .)
    NUMBER          reduce using rule 32 (Conds -> IN .)
    BOOL            reduce using rule 32 (Conds -> IN .)
    ABREL           reduce using rule 32 (Conds -> IN .)


state 65

    (34) Result -> Opern Sinais .

    NEXT            reduce using rule 34 (Result -> Opern Sinais .)
    TIMES           reduce using rule 34 (Result -> Opern Sinais .)
    DIVIDE          reduce using rule 34 (Result -> Opern Sinais .)
    MOD             reduce using rule 34 (Result -> Opern Sinais .)
    OR              reduce using rule 34 (Result -> Opern Sinais .)
    AND             reduce using rule 34 (Result -> Opern Sinais .)
    ADD             reduce using rule 34 (Result -> Opern Sinais .)
    MINUS           reduce using rule 34 (Result -> Opern Sinais .)
    MENOR           reduce using rule 34 (Result -> Opern Sinais .)
    MAIOR           reduce using rule 34 (Result -> Opern Sinais .)
    IGUAL           reduce using rule 34 (Result -> Opern Sinais .)
    DIFERENTE       reduce using rule 34 (Result -> Opern Sinais .)
    MAIORIGUAL      reduce using rule 34 (Result -> Opern Sinais .)
    MENORIGUAL      reduce using rule 34 (Result -> Opern Sinais .)
    IN              reduce using rule 34 (Result -> Opern Sinais .)
    FECHAL          reduce using rule 34 (Result -> Opern Sinais .)
    VIR             reduce using rule 34 (Result -> Opern Sinais .)
    PV              reduce using rule 34 (Result -> Opern Sinais .)
    FECHAP          reduce using rule 34 (Result -> Opern Sinais .)


state 66

    (60) Sinais -> Chamadafun .

    NEXT            reduce using rule 60 (Sinais -> Chamadafun .)
    TIMES           reduce using rule 60 (Sinais -> Chamadafun .)
    DIVIDE          reduce using rule 60 (Sinais -> Chamadafun .)
    MOD             reduce using rule 60 (Sinais -> Chamadafun .)
    OR              reduce using rule 60 (Sinais -> Chamadafun .)
    AND             reduce using rule 60 (Sinais -> Chamadafun .)
    ADD             reduce using rule 60 (Sinais -> Chamadafun .)
    MINUS           reduce using rule 60 (Sinais -> Chamadafun .)
    MENOR           reduce using rule 60 (Sinais -> Chamadafun .)
    MAIOR           reduce using rule 60 (Sinais -> Chamadafun .)
    IGUAL           reduce using rule 60 (Sinais -> Chamadafun .)
    DIFERENTE       reduce using rule 60 (Sinais -> Chamadafun .)
    MAIORIGUAL      reduce using rule 60 (Sinais -> Chamadafun .)
    MENORIGUAL      reduce using rule 60 (Sinais -> Chamadafun .)
    IN              reduce using rule 60 (Sinais -> Chamadafun .)
    FECHAL          reduce using rule 60 (Sinais -> Chamadafun .)
    VIR             reduce using rule 60 (Sinais -> Chamadafun .)
    PV              reduce using rule 60 (Sinais -> Chamadafun .)
    FECHAP          reduce using rule 60 (Sinais -> Chamadafun .)


state 67

    (61) Sinais -> WORD .
    (58) Chamadafun -> WORD . ABREP FECHAP
    (59) Chamadafun -> WORD . ABREP Conjunto FECHAP

    NEXT            reduce using rule 61 (Sinais -> WORD .)
    TIMES           reduce using rule 61 (Sinais -> WORD .)
    DIVIDE          reduce using rule 61 (Sinais -> WORD .)
    MOD             reduce using rule 61 (Sinais -> WORD .)
    OR              reduce using rule 61 (Sinais -> WORD .)
    AND             reduce using rule 61 (Sinais -> WORD .)
    ADD             reduce using rule 61 (Sinais -> WORD .)
    MINUS           reduce using rule 61 (Sinais -> WORD .)
    MENOR           reduce using rule 61 (Sinais -> WORD .)
    MAIOR           reduce using rule 61 (Sinais -> WORD .)
    IGUAL           reduce using rule 61 (Sinais -> WORD .)
    DIFERENTE       reduce using rule 61 (Sinais -> WORD .)
    MAIORIGUAL      reduce using rule 61 (Sinais -> WORD .)
    MENORIGUAL      reduce using rule 61 (Sinais -> WORD .)
    IN              reduce using rule 61 (Sinais -> WORD .)
    FECHAL          reduce using rule 61 (Sinais -> WORD .)
    VIR             reduce using rule 61 (Sinais -> WORD .)
    PV              reduce using rule 61 (Sinais -> WORD .)
    FECHAP          reduce using rule 61 (Sinais -> WORD .)
    ABREP           shift and go to state 70


state 68

    (62) Sinais -> NUMBER .

    NEXT            reduce using rule 62 (Sinais -> NUMBER .)
    TIMES           reduce using rule 62 (Sinais -> NUMBER .)
    DIVIDE          reduce using rule 62 (Sinais -> NUMBER .)
    MOD             reduce using rule 62 (Sinais -> NUMBER .)
    OR              reduce using rule 62 (Sinais -> NUMBER .)
    AND             reduce using rule 62 (Sinais -> NUMBER .)
    ADD             reduce using rule 62 (Sinais -> NUMBER .)
    MINUS           reduce using rule 62 (Sinais -> NUMBER .)
    MENOR           reduce using rule 62 (Sinais -> NUMBER .)
    MAIOR           reduce using rule 62 (Sinais -> NUMBER .)
    IGUAL           reduce using rule 62 (Sinais -> NUMBER .)
    DIFERENTE       reduce using rule 62 (Sinais -> NUMBER .)
    MAIORIGUAL      reduce using rule 62 (Sinais -> NUMBER .)
    MENORIGUAL      reduce using rule 62 (Sinais -> NUMBER .)
    IN              reduce using rule 62 (Sinais -> NUMBER .)
    FECHAL          reduce using rule 62 (Sinais -> NUMBER .)
    VIR             reduce using rule 62 (Sinais -> NUMBER .)
    PV              reduce using rule 62 (Sinais -> NUMBER .)
    FECHAP          reduce using rule 62 (Sinais -> NUMBER .)


state 69

    (36) Result -> ABREP Result . FECHAP
    (35) Result -> Result . Oper Varoper
    (37) Result -> Result . Oper ABREP Result FECHAP
    (40) Oper -> . Opern
    (41) Oper -> . TIMES
    (42) Oper -> . DIVIDE
    (43) Oper -> . MOD
    (44) Oper -> . OR
    (45) Oper -> . AND
    (46) Oper -> . Conds
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (26) Conds -> . MENOR
    (27) Conds -> . MAIOR
    (28) Conds -> . IGUAL
    (29) Conds -> . DIFERENTE
    (30) Conds -> . MAIORIGUAL
    (31) Conds -> . MENORIGUAL
    (32) Conds -> . IN

    FECHAP          shift and go to state 84
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 58
    MAIOR           shift and go to state 59
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAIORIGUAL      shift and go to state 62
    MENORIGUAL      shift and go to state 63
    IN              shift and go to state 64

    Oper                           shift and go to state 50
    Opern                          shift and go to state 51
    Conds                          shift and go to state 57

state 70

    (58) Chamadafun -> WORD ABREP . FECHAP
    (59) Chamadafun -> WORD ABREP . Conjunto FECHAP
    (15) Conjunto -> . Conjunto VIR Result
    (16) Conjunto -> . Result
    (33) Result -> . Varoper
    (34) Result -> . Opern Sinais
    (35) Result -> . Result Oper Varoper
    (36) Result -> . ABREP Result FECHAP
    (37) Result -> . Result Oper ABREP Result FECHAP
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    FECHAP          shift and go to state 85
    ABREP           shift and go to state 37
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Conjunto                       shift and go to state 86
    Result                         shift and go to state 87
    Varoper                        shift and go to state 35
    Opern                          shift and go to state 36
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 71

    (9) Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA .

    FECHAFP         reduce using rule 9 (Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA .)
    FUNABRE         reduce using rule 9 (Funcao -> FUNABRE WORD ABREP Args FECHAP Corpofun FUNFECHA .)


state 72

    (14) Args -> Args VIR Opern NUMBER .

    FECHAP          reduce using rule 14 (Args -> Args VIR Opern NUMBER .)
    VIR             reduce using rule 14 (Args -> Args VIR Opern NUMBER .)


state 73

    (17) Corpofun -> RETURN Result PV .

    FUNFECHA        reduce using rule 17 (Corpofun -> RETURN Result PV .)
    ELSE            reduce using rule 17 (Corpofun -> RETURN Result PV .)


state 74

    (22) CondSimple -> ABREP . Cond FECHAP
    (19) Cond -> . CondSimple
    (20) Cond -> . Cond CONDAND CondSimple
    (21) Cond -> . Cond CONDOR CondSimple
    (23) Cond -> . NOT CondSimple
    (22) CondSimple -> . ABREP Cond FECHAP
    (24) CondSimple -> . Varoper Conds Varoper
    (25) CondSimple -> . Varoper
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    NOT             shift and go to state 77
    ABREP           shift and go to state 74
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Cond                           shift and go to state 88
    CondSimple                     shift and go to state 76
    Varoper                        shift and go to state 78
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 75

    (18) Corpofun -> IF ABREP Cond . FECHAP Corpofun ELSE Corpofun
    (20) Cond -> Cond . CONDAND CondSimple
    (21) Cond -> Cond . CONDOR CondSimple

    FECHAP          shift and go to state 89
    CONDAND         shift and go to state 90
    CONDOR          shift and go to state 91


state 76

    (19) Cond -> CondSimple .

    FECHAP          reduce using rule 19 (Cond -> CondSimple .)
    CONDAND         reduce using rule 19 (Cond -> CondSimple .)
    CONDOR          reduce using rule 19 (Cond -> CondSimple .)


state 77

    (23) Cond -> NOT . CondSimple
    (22) CondSimple -> . ABREP Cond FECHAP
    (24) CondSimple -> . Varoper Conds Varoper
    (25) CondSimple -> . Varoper
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 74
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    CondSimple                     shift and go to state 92
    Varoper                        shift and go to state 78
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 78

    (24) CondSimple -> Varoper . Conds Varoper
    (25) CondSimple -> Varoper .
    (26) Conds -> . MENOR
    (27) Conds -> . MAIOR
    (28) Conds -> . IGUAL
    (29) Conds -> . DIFERENTE
    (30) Conds -> . MAIORIGUAL
    (31) Conds -> . MENORIGUAL
    (32) Conds -> . IN

    FECHAP          reduce using rule 25 (CondSimple -> Varoper .)
    CONDAND         reduce using rule 25 (CondSimple -> Varoper .)
    CONDOR          reduce using rule 25 (CondSimple -> Varoper .)
    MENOR           shift and go to state 58
    MAIOR           shift and go to state 59
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAIORIGUAL      shift and go to state 62
    MENORIGUAL      shift and go to state 63
    IN              shift and go to state 64

    Conds                          shift and go to state 93

state 79

    (15) Conjunto -> Conjunto VIR Result .
    (35) Result -> Result . Oper Varoper
    (37) Result -> Result . Oper ABREP Result FECHAP
    (40) Oper -> . Opern
    (41) Oper -> . TIMES
    (42) Oper -> . DIVIDE
    (43) Oper -> . MOD
    (44) Oper -> . OR
    (45) Oper -> . AND
    (46) Oper -> . Conds
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (26) Conds -> . MENOR
    (27) Conds -> . MAIOR
    (28) Conds -> . IGUAL
    (29) Conds -> . DIFERENTE
    (30) Conds -> . MAIORIGUAL
    (31) Conds -> . MENORIGUAL
    (32) Conds -> . IN

    FECHAL          reduce using rule 15 (Conjunto -> Conjunto VIR Result .)
    VIR             reduce using rule 15 (Conjunto -> Conjunto VIR Result .)
    FECHAP          reduce using rule 15 (Conjunto -> Conjunto VIR Result .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 58
    MAIOR           shift and go to state 59
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAIORIGUAL      shift and go to state 62
    MENORIGUAL      shift and go to state 63
    IN              shift and go to state 64

    Oper                           shift and go to state 50
    Opern                          shift and go to state 51
    Conds                          shift and go to state 57

state 80

    (56) Conjunto2 -> Result .
    (35) Result -> Result . Oper Varoper
    (37) Result -> Result . Oper ABREP Result FECHAP
    (40) Oper -> . Opern
    (41) Oper -> . TIMES
    (42) Oper -> . DIVIDE
    (43) Oper -> . MOD
    (44) Oper -> . OR
    (45) Oper -> . AND
    (46) Oper -> . Conds
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (26) Conds -> . MENOR
    (27) Conds -> . MAIOR
    (28) Conds -> . IGUAL
    (29) Conds -> . DIFERENTE
    (30) Conds -> . MAIORIGUAL
    (31) Conds -> . MENORIGUAL
    (32) Conds -> . IN

    FECHAL          reduce using rule 56 (Conjunto2 -> Result .)
    NEXT            reduce using rule 56 (Conjunto2 -> Result .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 58
    MAIOR           shift and go to state 59
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAIORIGUAL      shift and go to state 62
    MENORIGUAL      shift and go to state 63
    IN              shift and go to state 64

    Oper                           shift and go to state 50
    Opern                          shift and go to state 51
    Conds                          shift and go to state 57

state 81

    (55) List -> ABREL Result NEXT Conjunto2 . FECHAL
    (57) Conjunto2 -> Conjunto2 . NEXT Result

    FECHAL          shift and go to state 95
    NEXT            shift and go to state 94


state 82

    (35) Result -> Result Oper Varoper .

    NEXT            reduce using rule 35 (Result -> Result Oper Varoper .)
    TIMES           reduce using rule 35 (Result -> Result Oper Varoper .)
    DIVIDE          reduce using rule 35 (Result -> Result Oper Varoper .)
    MOD             reduce using rule 35 (Result -> Result Oper Varoper .)
    OR              reduce using rule 35 (Result -> Result Oper Varoper .)
    AND             reduce using rule 35 (Result -> Result Oper Varoper .)
    ADD             reduce using rule 35 (Result -> Result Oper Varoper .)
    MINUS           reduce using rule 35 (Result -> Result Oper Varoper .)
    MENOR           reduce using rule 35 (Result -> Result Oper Varoper .)
    MAIOR           reduce using rule 35 (Result -> Result Oper Varoper .)
    IGUAL           reduce using rule 35 (Result -> Result Oper Varoper .)
    DIFERENTE       reduce using rule 35 (Result -> Result Oper Varoper .)
    MAIORIGUAL      reduce using rule 35 (Result -> Result Oper Varoper .)
    MENORIGUAL      reduce using rule 35 (Result -> Result Oper Varoper .)
    IN              reduce using rule 35 (Result -> Result Oper Varoper .)
    FECHAL          reduce using rule 35 (Result -> Result Oper Varoper .)
    VIR             reduce using rule 35 (Result -> Result Oper Varoper .)
    PV              reduce using rule 35 (Result -> Result Oper Varoper .)
    FECHAP          reduce using rule 35 (Result -> Result Oper Varoper .)


state 83

    (37) Result -> Result Oper ABREP . Result FECHAP
    (33) Result -> . Varoper
    (34) Result -> . Opern Sinais
    (35) Result -> . Result Oper Varoper
    (36) Result -> . ABREP Result FECHAP
    (37) Result -> . Result Oper ABREP Result FECHAP
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 37
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Result                         shift and go to state 96
    Varoper                        shift and go to state 35
    Opern                          shift and go to state 36
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 84

    (36) Result -> ABREP Result FECHAP .

    NEXT            reduce using rule 36 (Result -> ABREP Result FECHAP .)
    TIMES           reduce using rule 36 (Result -> ABREP Result FECHAP .)
    DIVIDE          reduce using rule 36 (Result -> ABREP Result FECHAP .)
    MOD             reduce using rule 36 (Result -> ABREP Result FECHAP .)
    OR              reduce using rule 36 (Result -> ABREP Result FECHAP .)
    AND             reduce using rule 36 (Result -> ABREP Result FECHAP .)
    ADD             reduce using rule 36 (Result -> ABREP Result FECHAP .)
    MINUS           reduce using rule 36 (Result -> ABREP Result FECHAP .)
    MENOR           reduce using rule 36 (Result -> ABREP Result FECHAP .)
    MAIOR           reduce using rule 36 (Result -> ABREP Result FECHAP .)
    IGUAL           reduce using rule 36 (Result -> ABREP Result FECHAP .)
    DIFERENTE       reduce using rule 36 (Result -> ABREP Result FECHAP .)
    MAIORIGUAL      reduce using rule 36 (Result -> ABREP Result FECHAP .)
    MENORIGUAL      reduce using rule 36 (Result -> ABREP Result FECHAP .)
    IN              reduce using rule 36 (Result -> ABREP Result FECHAP .)
    FECHAL          reduce using rule 36 (Result -> ABREP Result FECHAP .)
    VIR             reduce using rule 36 (Result -> ABREP Result FECHAP .)
    PV              reduce using rule 36 (Result -> ABREP Result FECHAP .)
    FECHAP          reduce using rule 36 (Result -> ABREP Result FECHAP .)


state 85

    (58) Chamadafun -> WORD ABREP FECHAP .

    NEXT            reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    TIMES           reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    DIVIDE          reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    MOD             reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    OR              reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    AND             reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    ADD             reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    MINUS           reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    MENOR           reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    MAIOR           reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    IGUAL           reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    DIFERENTE       reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    MAIORIGUAL      reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    MENORIGUAL      reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    IN              reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    FECHAL          reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    VIR             reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    PV              reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    FECHAP          reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    CONDAND         reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)
    CONDOR          reduce using rule 58 (Chamadafun -> WORD ABREP FECHAP .)


state 86

    (59) Chamadafun -> WORD ABREP Conjunto . FECHAP
    (15) Conjunto -> Conjunto . VIR Result

    FECHAP          shift and go to state 97
    VIR             shift and go to state 48


state 87

    (16) Conjunto -> Result .
    (35) Result -> Result . Oper Varoper
    (37) Result -> Result . Oper ABREP Result FECHAP
    (40) Oper -> . Opern
    (41) Oper -> . TIMES
    (42) Oper -> . DIVIDE
    (43) Oper -> . MOD
    (44) Oper -> . OR
    (45) Oper -> . AND
    (46) Oper -> . Conds
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (26) Conds -> . MENOR
    (27) Conds -> . MAIOR
    (28) Conds -> . IGUAL
    (29) Conds -> . DIFERENTE
    (30) Conds -> . MAIORIGUAL
    (31) Conds -> . MENORIGUAL
    (32) Conds -> . IN

    FECHAP          reduce using rule 16 (Conjunto -> Result .)
    VIR             reduce using rule 16 (Conjunto -> Result .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 58
    MAIOR           shift and go to state 59
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAIORIGUAL      shift and go to state 62
    MENORIGUAL      shift and go to state 63
    IN              shift and go to state 64

    Oper                           shift and go to state 50
    Opern                          shift and go to state 51
    Conds                          shift and go to state 57

state 88

    (22) CondSimple -> ABREP Cond . FECHAP
    (20) Cond -> Cond . CONDAND CondSimple
    (21) Cond -> Cond . CONDOR CondSimple

    FECHAP          shift and go to state 98
    CONDAND         shift and go to state 90
    CONDOR          shift and go to state 91


state 89

    (18) Corpofun -> IF ABREP Cond FECHAP . Corpofun ELSE Corpofun
    (17) Corpofun -> . RETURN Result PV
    (18) Corpofun -> . IF ABREP Cond FECHAP Corpofun ELSE Corpofun

    RETURN          shift and go to state 29
    IF              shift and go to state 30

    Corpofun                       shift and go to state 99

state 90

    (20) Cond -> Cond CONDAND . CondSimple
    (22) CondSimple -> . ABREP Cond FECHAP
    (24) CondSimple -> . Varoper Conds Varoper
    (25) CondSimple -> . Varoper
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 74
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    CondSimple                     shift and go to state 100
    Varoper                        shift and go to state 78
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 91

    (21) Cond -> Cond CONDOR . CondSimple
    (22) CondSimple -> . ABREP Cond FECHAP
    (24) CondSimple -> . Varoper Conds Varoper
    (25) CondSimple -> . Varoper
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 74
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    CondSimple                     shift and go to state 101
    Varoper                        shift and go to state 78
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 92

    (23) Cond -> NOT CondSimple .

    FECHAP          reduce using rule 23 (Cond -> NOT CondSimple .)
    CONDAND         reduce using rule 23 (Cond -> NOT CondSimple .)
    CONDOR          reduce using rule 23 (Cond -> NOT CondSimple .)


state 93

    (24) CondSimple -> Varoper Conds . Varoper
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Varoper                        shift and go to state 102
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 94

    (57) Conjunto2 -> Conjunto2 NEXT . Result
    (33) Result -> . Varoper
    (34) Result -> . Opern Sinais
    (35) Result -> . Result Oper Varoper
    (36) Result -> . ABREP Result FECHAP
    (37) Result -> . Result Oper ABREP Result FECHAP
    (47) Varoper -> . Chamadafun
    (48) Varoper -> . Var
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (58) Chamadafun -> . WORD ABREP FECHAP
    (59) Chamadafun -> . WORD ABREP Conjunto FECHAP
    (49) Var -> . NUMBER
    (50) Var -> . BOOL
    (51) Var -> . List
    (52) Var -> . WORD
    (53) List -> . ABREL FECHAL
    (54) List -> . ABREL Conjunto FECHAL
    (55) List -> . ABREL Result NEXT Conjunto2 FECHAL

    ABREP           shift and go to state 37
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    WORD            shift and go to state 40
    NUMBER          shift and go to state 20
    BOOL            shift and go to state 21
    ABREL           shift and go to state 25

    Result                         shift and go to state 103
    Varoper                        shift and go to state 35
    Opern                          shift and go to state 36
    Chamadafun                     shift and go to state 38
    Var                            shift and go to state 39
    List                           shift and go to state 22

state 95

    (55) List -> ABREL Result NEXT Conjunto2 FECHAL .

    FECHAP          reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    VIR             reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    NEXT            reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    TIMES           reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    DIVIDE          reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MOD             reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    OR              reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    AND             reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    ADD             reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MINUS           reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MENOR           reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MAIOR           reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    IGUAL           reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    DIFERENTE       reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MAIORIGUAL      reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    MENORIGUAL      reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    IN              reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    FECHAL          reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    PV              reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    CONDAND         reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)
    CONDOR          reduce using rule 55 (List -> ABREL Result NEXT Conjunto2 FECHAL .)


state 96

    (37) Result -> Result Oper ABREP Result . FECHAP
    (35) Result -> Result . Oper Varoper
    (37) Result -> Result . Oper ABREP Result FECHAP
    (40) Oper -> . Opern
    (41) Oper -> . TIMES
    (42) Oper -> . DIVIDE
    (43) Oper -> . MOD
    (44) Oper -> . OR
    (45) Oper -> . AND
    (46) Oper -> . Conds
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (26) Conds -> . MENOR
    (27) Conds -> . MAIOR
    (28) Conds -> . IGUAL
    (29) Conds -> . DIFERENTE
    (30) Conds -> . MAIORIGUAL
    (31) Conds -> . MENORIGUAL
    (32) Conds -> . IN

    FECHAP          shift and go to state 104
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 58
    MAIOR           shift and go to state 59
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAIORIGUAL      shift and go to state 62
    MENORIGUAL      shift and go to state 63
    IN              shift and go to state 64

    Oper                           shift and go to state 50
    Opern                          shift and go to state 51
    Conds                          shift and go to state 57

state 97

    (59) Chamadafun -> WORD ABREP Conjunto FECHAP .

    NEXT            reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    TIMES           reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    DIVIDE          reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MOD             reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    OR              reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    AND             reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    ADD             reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MINUS           reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MENOR           reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MAIOR           reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    IGUAL           reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    DIFERENTE       reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MAIORIGUAL      reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    MENORIGUAL      reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    IN              reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    FECHAL          reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    VIR             reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    PV              reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    FECHAP          reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    CONDAND         reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)
    CONDOR          reduce using rule 59 (Chamadafun -> WORD ABREP Conjunto FECHAP .)


state 98

    (22) CondSimple -> ABREP Cond FECHAP .

    FECHAP          reduce using rule 22 (CondSimple -> ABREP Cond FECHAP .)
    CONDAND         reduce using rule 22 (CondSimple -> ABREP Cond FECHAP .)
    CONDOR          reduce using rule 22 (CondSimple -> ABREP Cond FECHAP .)


state 99

    (18) Corpofun -> IF ABREP Cond FECHAP Corpofun . ELSE Corpofun

    ELSE            shift and go to state 105


state 100

    (20) Cond -> Cond CONDAND CondSimple .

    FECHAP          reduce using rule 20 (Cond -> Cond CONDAND CondSimple .)
    CONDAND         reduce using rule 20 (Cond -> Cond CONDAND CondSimple .)
    CONDOR          reduce using rule 20 (Cond -> Cond CONDAND CondSimple .)


state 101

    (21) Cond -> Cond CONDOR CondSimple .

    FECHAP          reduce using rule 21 (Cond -> Cond CONDOR CondSimple .)
    CONDAND         reduce using rule 21 (Cond -> Cond CONDOR CondSimple .)
    CONDOR          reduce using rule 21 (Cond -> Cond CONDOR CondSimple .)


state 102

    (24) CondSimple -> Varoper Conds Varoper .

    FECHAP          reduce using rule 24 (CondSimple -> Varoper Conds Varoper .)
    CONDAND         reduce using rule 24 (CondSimple -> Varoper Conds Varoper .)
    CONDOR          reduce using rule 24 (CondSimple -> Varoper Conds Varoper .)


state 103

    (57) Conjunto2 -> Conjunto2 NEXT Result .
    (35) Result -> Result . Oper Varoper
    (37) Result -> Result . Oper ABREP Result FECHAP
    (40) Oper -> . Opern
    (41) Oper -> . TIMES
    (42) Oper -> . DIVIDE
    (43) Oper -> . MOD
    (44) Oper -> . OR
    (45) Oper -> . AND
    (46) Oper -> . Conds
    (38) Opern -> . ADD
    (39) Opern -> . MINUS
    (26) Conds -> . MENOR
    (27) Conds -> . MAIOR
    (28) Conds -> . IGUAL
    (29) Conds -> . DIFERENTE
    (30) Conds -> . MAIORIGUAL
    (31) Conds -> . MENORIGUAL
    (32) Conds -> . IN

    FECHAL          reduce using rule 57 (Conjunto2 -> Conjunto2 NEXT Result .)
    NEXT            reduce using rule 57 (Conjunto2 -> Conjunto2 NEXT Result .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    ADD             shift and go to state 23
    MINUS           shift and go to state 24
    MENOR           shift and go to state 58
    MAIOR           shift and go to state 59
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAIORIGUAL      shift and go to state 62
    MENORIGUAL      shift and go to state 63
    IN              shift and go to state 64

    Oper                           shift and go to state 50
    Opern                          shift and go to state 51
    Conds                          shift and go to state 57

state 104

    (37) Result -> Result Oper ABREP Result FECHAP .

    NEXT            reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    TIMES           reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    DIVIDE          reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    MOD             reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    OR              reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    AND             reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    ADD             reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    MINUS           reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    MENOR           reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    MAIOR           reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    IGUAL           reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    DIFERENTE       reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    MAIORIGUAL      reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    MENORIGUAL      reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    IN              reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    FECHAL          reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    VIR             reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    PV              reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)
    FECHAP          reduce using rule 37 (Result -> Result Oper ABREP Result FECHAP .)


state 105

    (18) Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE . Corpofun
    (17) Corpofun -> . RETURN Result PV
    (18) Corpofun -> . IF ABREP Cond FECHAP Corpofun ELSE Corpofun

    RETURN          shift and go to state 29
    IF              shift and go to state 30

    Corpofun                       shift and go to state 106

state 106

    (18) Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE Corpofun .

    FUNFECHA        reduce using rule 18 (Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE Corpofun .)
    ELSE            reduce using rule 18 (Corpofun -> IF ABREP Cond FECHAP Corpofun ELSE Corpofun .)

